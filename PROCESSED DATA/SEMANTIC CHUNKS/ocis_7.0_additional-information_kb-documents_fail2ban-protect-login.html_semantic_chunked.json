{
    "file_name": "ocis_7.0_additional-information_kb-documents_fail2ban-protect-login.html",
    "file_path": "./owncloud_docs\\ocis_7.0_additional-information_kb-documents_fail2ban-protect-login.html",
    "chunks": [
        {
            "cluster": 4,
            "chunk_content": "Documentation for ownCloud (A Kiteworks Company)\nInfinite Scale Documentation\nIntroduction\nQuick Guide\nInfinite Scale Overview\nArchitecture and Concepts\nAvailability and Scalability\nSecurity Aspects\nDeployment\nPrerequisites\nStorage\nGeneral Storage Considerations\nNetwork File System\nS3\nPosixFS\nGeneral Information\nThe ocis init Command\nContainer Orchestration\nOffice Applications using WOPI\nSecuring oCIS\nUser Triggered GDPR Report\nServices\nGeneral Information\nDeployment Considerations\nEnvironment Variable Notes\nEnvironment Variables with Special Scope\nEnvironment Variable Changes\nRegistry\nCaching and Persistence\nGateways\nLogging\nPorts Used\nTransport Layer Security\nList of Services\nActivitylog\nAntivirus\nApp Provider\nApp Registry\nAudit\nAuth App\nAuth Basic\nAuth Bearer\nAuth Machine\nAuth Service\nClientlog\nCollaboration\nEventhistory\nFrontend\nGateway\nGraph\nGroups\nIDM\nInvitations\nIDP\nNATS\nNotifications\nOCDAV\nOCM\nOCS\nPolicies\nPostprocessing\nProxy\nSearch\nSettings\nSharing\nSSE\nStore\nStorage-Publiclink\nStorage-Shares\nStorage-System\nStorage-Users\nThumbnails\nUserlog\nUsers\nWeb\nWebDAV\nWebfinger\nWeb UI\nCustom Configuration\nCustom Theming\nMaintenance\nBackup and Restore\nBackup Considerations\nBackup\nRestore\nMaintenance Commands\nListing Space IDs\nListing User IDs\nMigration and Upgrades\nUpgrading Infinite Scale\nMonitoring\nPrometheus\nConfiguration Examples\nOffice Integration\nSearch\nDeployment Examples\nMinimal Bare Metal\nBare Metal with systemd\nContainer Setup\nUbuntu with Docker Compose\nLocal Production Setup\nDeployment on Hetzner\nSetup Federations\nScienceMesh Setup\nAdditional Information\nKnowledge Base\nInfinite Scale Documentation\n7.0\nDesktop App\nnext\n5.3\n5.2\nInfinite Scale Documentation\nnext\n7.1\n7.0\nMobile App for Android\nnext\n4.5\n4.4\nMobile App for iOS\nnext\n12.4\n12.3\nownCloud Main Page\nownCloud Server\nnext\n10.15\n10.14\nownCloud Web User Interfaces\nnext\nInfinite Scale Documentation\nBrute Force Protection Against Failed Login Attempts\nnext\n7.1\n7.0\nEdit this Page\nBrute Force Protection Against Failed Login Attempts\nTable of Contents\nIntroduction\nPrerequisites\nConfiguration\nFail2ban Setup\nIntroduction\nImplementing a brute force protection against failing login attempts is something that usually should be done before the IDP, the load balancer or whatever component sees the requests first. The content has been extracted and adapted from\nCentral\n, our community page, and is without any claim for correctness and eligibility for support, though feedback is welcomed. Make sure to create a volume to do so. About ownCloud\nThe Secure Collaboration Platform\nNews\nPrivacy statement\nImprint\nResources\nFAQ\nHelp\nSecurity\nChangelog\nGet started\nInteract\nRocket.Chat\nForum\nContribute\nCustomer support\nÂ© Copyright 2011-2025, The ownCloud developers."
        },
        {
            "cluster": 1,
            "chunk_content": "Setting up\nFail2ban\nparsing logs can be a possibility but is subject to a concrete setup. Note that this document gives an overview and assumes that you are familiar with Fail2ban. Fail2ban\nneeds to be:\ninstalled and a basic setup configured. Fail2ban Setup\nMake sure to adapt the paths to configuration files according to the environment used. It is recommended to double check with\nfail2ban-regex\n. Create a Fail2ban\nfilter\nfile\n/etc/fail2ban/filter.d/ocis.conf\nwith the following example content:\n# ocis.conf\n[Definition]\nfailregex = ^.*\"service\":\"idm\". # Set to 3 to include lines added when in debug mode\nmaxlines = 3\nCreate a Fail2ban\njail\nfile\n/etc/fail2ban/jail.d/ocis.conf\nwith the following example content, use the correct path to access the\nocis.log\nfile and change any settings according to your needs:\n[ocis]\nenabled = true\nfilter = ocis\nlogpath = /path/to/ocis/logs/ocis.logs\nmaxretry = 3\nfindtime = 3600\nbantime = 60\naction = iptables-allports\nAfter creating the necessary files, restart Fail2ban and test the setup."
        },
        {
            "cluster": 2,
            "chunk_content": "Prerequisites\nLogging to file needs to be enabled for Infinite Scale. When running a container setup, the Infinite Scale logs need to be available to the host so Fail2ban can access them. able to access the Infinite Scale logs. One of the cases where the two logs are not directly consecutive is when enabling the Infinite Scale debug mode. *Z\n[Init]\n# Maybe to be increased, in case more logs slip in between."
        },
        {
            "cluster": 0,
            "chunk_content": "See the\nOCIS_LOG_FILE\nfor more details. Configuration\nNote, you need at minimum loglevel\ninfo\nfor the\nidm\nand\nproxy\nservice to get all required data logged. The log for a failed login attempt looks like this and consists of two log entries that belong together:\n{\"level\":\"error\",\"service\":\"idm\",\"bind_dn\":\"uid=someuser,ou=users,o=libregraph-idm\",\"op\":\"bind\",\"remote_addr\":\"127.0.0.1:59672\",\"time\":\"2023-03-20T19:26:04.726564978Z\",\"message\":\"invalid credentials\"}\n{\"level\":\"info\",\"service\":\"proxy\",\"proto\":\"HTTP/1.0\",\"request-id\":\"blabla\",\"remote-addr\":\"123.123.123.123\",\"method\":\"POST\",\"status\":204,\"path\":\"/signin/v1/identifier/_/logon\",\"duration\":135.139963,\"bytes\":0,\"time\":\"2023-03-20T19:26:04.727076622Z\",\"message\":\"access-log\"}\nThe first log entry is used to detect the\ninvalid credentials\nmessage only but it does not contain the correct IP address. The other related log entry contains the needed IP address for further processing. There can be more lines in between the first log message and the one holding the correct address. *\"message\":\"invalid credentials\"\n((.|\\n)*)\nremote-addr\".\"<HOST>\",\"method\":\"POST\",\"status\":204."
        },
        {
            "cluster": 3,
            "chunk_content": "These get filtered out by the regex part\n((.|\\n)*)\nin the\nfailregex\ndefinition. For ease of reading and because\nfailregex\nsupports multi-line, the regex used is multi-lined to match the description above, though you can write it all in one line. *\nignoreregex =\ndatepattern = ^%%Y-%%b-%%dT%%H:%%M:%%S\\."
        }
    ]
}