{
    "file_name": "ocis_7.0_depl-examples_minimal-bare-metal.html",
    "file_path": "./owncloud_docs\\ocis_7.0_depl-examples_minimal-bare-metal.html",
    "chunks": [
        {
            "cluster": 2,
            "chunk_content": "Documentation for ownCloud (A Kiteworks Company)\nInfinite Scale Documentation\nIntroduction\nQuick Guide\nInfinite Scale Overview\nArchitecture and Concepts\nAvailability and Scalability\nSecurity Aspects\nDeployment\nPrerequisites\nStorage\nGeneral Storage Considerations\nNetwork File System\nS3\nPosixFS\nGeneral Information\nThe ocis init Command\nContainer Orchestration\nOffice Applications using WOPI\nSecuring oCIS\nUser Triggered GDPR Report\nServices\nGeneral Information\nDeployment Considerations\nEnvironment Variable Notes\nEnvironment Variables with Special Scope\nEnvironment Variable Changes\nRegistry\nCaching and Persistence\nGateways\nLogging\nPorts Used\nTransport Layer Security\nList of Services\nActivitylog\nAntivirus\nApp Provider\nApp Registry\nAudit\nAuth App\nAuth Basic\nAuth Bearer\nAuth Machine\nAuth Service\nClientlog\nCollaboration\nEventhistory\nFrontend\nGateway\nGraph\nGroups\nIDM\nInvitations\nIDP\nNATS\nNotifications\nOCDAV\nOCM\nOCS\nPolicies\nPostprocessing\nProxy\nSearch\nSettings\nSharing\nSSE\nStore\nStorage-Publiclink\nStorage-Shares\nStorage-System\nStorage-Users\nThumbnails\nUserlog\nUsers\nWeb\nWebDAV\nWebfinger\nWeb UI\nCustom Configuration\nCustom Theming\nMaintenance\nBackup and Restore\nBackup Considerations\nBackup\nRestore\nMaintenance Commands\nListing Space IDs\nListing User IDs\nMigration and Upgrades\nUpgrading Infinite Scale\nMonitoring\nPrometheus\nConfiguration Examples\nOffice Integration\nSearch\nDeployment Examples\nMinimal Bare Metal\nBare Metal with systemd\nContainer Setup\nUbuntu with Docker Compose\nLocal Production Setup\nDeployment on Hetzner\nSetup Federations\nScienceMesh Setup\nAdditional Information\nKnowledge Base\nInfinite Scale Documentation\n7.0\nDesktop App\nnext\n5.3\n5.2\nInfinite Scale Documentation\nnext\n7.1\n7.0\nMobile App for Android\nnext\n4.5\n4.4\nMobile App for iOS\nnext\n12.4\n12.3\nownCloud Main Page\nownCloud Server\nnext\n10.15\n10.14\nownCloud Web User Interfaces\nnext\nInfinite Scale Documentation\nDeployment Examples\nMinimal Bare Metal\nnext\n7.1\n7.0\nEdit this Page\nMinimal Bare Metal Deployment\nTable of Contents\nIntroduction\nPrerequisites\nUsed Settings\nTL;DR\nInstallation\nGetting Command Line Help\nStarting Infinite Scale\nFirst Time Initializing Infinite Scale\nStarting the Infinite Scale Runtime\nConfiguring Infinite Scale\nAccessing Infinite Scale\nAccessing Infinite Scale Other Than Localhost\nList Running Infinite Scale Processes\nStopping Infinite Scale\nIntroduction\nThis description allows you to have an Infinite Scale system up and running with only a few commands. ownCloud highly recommends reading the\nGeneral Information\npage first, as it contains valuable information about configuration rules, managing services and default paths - just to mention some of the useful topics. Define a stable binary to use as replacement for\n<file_url>\nvia\ndownload.owncloud.com\n, replace\n<file_name>\nin the command accordingly. Installation\nTo get the stable binary from ownCloud, visit\ndownload.owncloud.com\n, select the version and the platform of choice and copy the link of the file. This is not recommended for public instances! If you want to detach it and avoid it being stopped when closing the shell or the shell gets disconnected (SIGHUP), use the following command:\nBash\nocis server & disown -h\nZSH\nocis server & disown %%\nSee the respective shell documentation for how to manage processes respectively detach and re-attach sessions. See\nManaging Services\nfor more details. Note that SIGTERM politely asks a process to terminate. It will terminate gracefully, cleaning up all resources (files, sockets, child processes, etc. Do not use\nSIGKILL\n(9) as this will initiate a dirty shutdown. The following command stops the runtime with all its services plus any extra started services which are not part of the runtime and have been started manually. killall -v -s 15 ocis\nSearch\nBare Metal with systemd\nAbout ownCloud\nThe Secure Collaboration Platform\nNews\nPrivacy statement\nImprint\nResources\nFAQ\nHelp\nSecurity\nChangelog\nGet started\nInteract\nRocket.Chat\nForum\nContribute\nCustomer support\nÂ© Copyright 2011-2025, The ownCloud developers."
        },
        {
            "cluster": 4,
            "chunk_content": "It does not cover extended deployment tasks, how to manage trusted certificates, run online office applications etc. and is intended to get a first hands-on experience of the system only. For a small production environment using the binary installation approach, see the\nBare Metal Deployment with systemd\n. The main differences between this setup and the small production environment using the binary installation is, in a nutshell, the use of systemd, LetsEncrypt and a reverse proxy. Note that there is a difference in internal thumbnail processing when using binary vs container deployments. Trusted certificates can be installed later on, see\nHandling Certificates\nfor more information. See the\nBare Metal Deployment with systemd\nfor more details on using a reverse proxy setup."
        },
        {
            "cluster": 0,
            "chunk_content": "For details see the\nthumbnails\nservice. Prerequisites\nSee the\nPrerequisites\nsection for more details. Used Settings\nThe following settings were used in this guide. For more details and explanations, we recommend taking the step by step process starting with the next section. Check the sort order on the modification date to get the most recent releases on top. Depending on your system and preferences, you may want to save the binary in\n/usr/local/bin\n. Replace\n<file_url>\nand\n<file_name>\nin the commands accordingly. If you already have a running instance, you must stop and restart the instance to activate the new version. Refer to the\nDefault Users and Groups\nsection if you want to have demo users created when initializing the system. This step can only be done during initialization. You can edit this file later. For details see the\nConfiguration Directory\ndocumentation. As you cannot overwrite the existing configuration, you must delete the old configuration first to proceed. ), deleting temporary files and so on."
        },
        {
            "cluster": 1,
            "chunk_content": "This minimal bare metal deployment makes the following assumptions:\nAcccessing Infinite Scale only from the server. To access Infinite Scale via hostname or IP, see\nAccessing Infinite Scale Other Than Localhost\n. You are fine in the first step using Infinite Scales internal unsigned certificates. You can change this according to your needs:\nThe Infinite Scale binary location:\n/usr/local/bin\n(OS default)\nThe Infinite Scale\nconfiguration directory\n:\n$HOME/.ocis/config/\nThe Infinite Scale\nbase data directory\n:\n/var/lib/ocis\nThe URL for accessing Infinite Scale:\nlocalhost\nThe port for accessing Infinite Scale:\n9200\n(default)\nTL;DR\nFor those who want to skip reading the full document, use this summary of commands to download, start and access Infinite Scale without any additional information provided. With this approach, the system you install Infinite Scale on\nmust\nhave a GUI present. A headless system has different requirements and needs an extended setup, see\nAccessing Infinite Scale Other Than Localhost\n. Congratulations, you now have access to your Infinite Scale instance. Getting Command Line Help\nTo get a list of available options and commands type:\nocis\nor\nocis --help\nStarting Infinite Scale\nInfinite Scale is started in two steps:\nA first time start to initialize the system and\na recurring start after initialization. First Time Initializing Infinite Scale\nInfinite Scale needs a\nfirst time initialization\nto set up the environment. Type the following command to initialize Infinite Scale. ocis init\nOn success, you will see a message like:\nDo you want to configure Infinite Scale with certificate checking disabled? For more details, see:\nInitialize Infinite Scale\n. Starting the Infinite Scale Runtime\nAfter initializing Infinite Scale for the first time, you can start the Infinite Scale runtime which includes embedded services. Starting Infinite Scale\nThe example commands shown below have no environment variables or command line options for ease of reading, add them according to your requirements. To start the Infinite Scale runtime type:\nocis server\nNote that this will bind\nocis\nto the shell you are running. Configuring Infinite Scale\nInfinite Scale can be configured via environment variables, see the following sections for more information and details:\nStarting Infinite Scale With Environment Variables\nConfigurations to Access the Web UI\nYou cannot instantiate runtime services though you can define which services should start or be excluded from starting. Accessing Infinite Scale\nWhen you have configured and started the Infinite Scale runtime as described in the example command above, you can access it via a browser using\nhttps://localhost:9200\n. Accessing Infinite Scale Other Than Localhost\nIf you want to reuse an already configured\nminimized\nsetup for any\nother\naddress than\nhttps://localhost:9200\n:\nWhen accessing the server using the hostname or IP:\nYou\nmust\nstart Infinite Scale using the environment variable\nOCIS_URL=<hostname or IP>\n. See the following sections for more details and information:\nStarting Infinite Scale With Environment Variables\nand\nConfigurations to Access the Web UI\n. When Infinite Scale is accessed, it forwards requests to the embedded\nIDP service\nwhich requires a secure connection and a domain name that matches the reverse proxy settings. List Running Infinite Scale Processes\nTo list all running ocis processes type:\nps ax | grep ocis | grep -v grep\n221297 pts/1    Sl     0:04 ocis server\n221706 pts/0    Sl     0:00 ocis notifications\nStopping Infinite Scale\nTo properly stop Infinite Scale, the signal\nSIGTERM\n(15) is used."
        },
        {
            "cluster": 3,
            "chunk_content": "Use\nhttps://localhost:9200\nas URL and no further configuration is neccesary. sudo wget -P /usr/local/bin <file_url>\nsudo chmod a+x /usr/local/bin/<file_name>\nsudo ln -s -f /usr/local/bin/<file_name> /usr/local/bin/ocis\nocis init\nocis server\nOpen a browser and use as URL:\nhttps://localhost:9200\nand the credentials printed by the\nocis init\ncommand to login. Download the binary:\nsudo wget -P /usr/local/bin <file_url>\nMake the binary executable with:\nsudo chmod a+x /usr/local/bin/<file_name>\nCreate a link from the versioned ocis binary to the final executable named\nocis\n:\nNote when using a symbolic link like this, upgrading and/or testing is much easier. sudo ln -s -f /usr/local/bin/<file_name> /usr/local/bin/ocis\nCheck the version installed:\nocis version --skip-services\nThe output looks like this:\nVersion: 7.0.0\nCompiled: 2025-03-14 00:00:00 +0000 UTC\nNote that if you omit\n--skip-services\n, you will get additional information about services printed. You will need to answer questions as the basis for generating a default\nocis.yaml\nfile. The default location for config files is, if not otherwise defined,\n$HOME/.ocis/config/\n. [yes | no = default]\n=========================================\ngenerated OCIS Config\n=========================================\nconfigpath : <your-user>/.ocis/config/ocis.yaml\nuser       : admin\npassword   : <removed for documentation>\nIf you get an error message like the following:\nCould not create config: config in /home/<user-name>/.ocis/config/ocis.yaml already exists\nyou already have created a configuration once. Use the credentials printed from the\nocis init\ncommand. When accessing the server using a dedicated domain name:\nYou\nmust\nuse a reverse proxy. Depending on the user you started\nocis\nwith and which user you are currently logged in as, you may need to use\nsudo\nfor the killall command for proper permissions."
        }
    ]
}