{
    "file_name": "server_10.15_developer_manual_webdav_api_comments.html",
    "file_path": "./owncloud_docs\\server_10.15_developer_manual_webdav_api_comments.html",
    "chunks": [
        {
            "cluster": 3,
            "chunk_content": "Documentation for ownCloud (A Kiteworks Company)\nownCloud Server\nIntroduction\nAdmin Manual\nIntroduction\nUseful Pages\nFAQ\nGDPR\nInstallation\nDeployment Considerations\nDeployment Recommendations\nNFS\nSystem Requirements\nConfiguration Notes and Tips\nInstallation Options\nInstalling With Docker\nManual Installation on Linux\nDetailed Installation Guide\nDetailed Installation on Ubuntu (various versions)\nQuick Installation Guide\nOn Ubuntu 20.04\nOn Ubuntu 22.04\nLinux Package Manager\nLinux Package Manager Installation\nThe Installation Wizard\nTroubleshooting\nChanging Your ownCloud URL\nInstalling and Managing Apps\nSupported Apps\nMedia Viewer\nSELinux Configuration\nUsing Let’s Encrypt SSL Certificates\nUsing Letsencrypt\nApache\nConfiguration\nDatabase\nDatabase Conversion\nDatabase Configuration\nEncryption\nEncryption Configuration\nEncryption Configuration Quick Guide\nExternal Storage\nExternal Storage Configuration\nExternal Storage Authentication Mechanisms\nAmazonS3\nDropbox\nFTP\nGoogle\nLocal\nownCloud\nS3 as Primary\nSFTP\nSMB\nWebDAV\nFiles and Sharing\nBig File Upload Configuration\nManual File Locking\nDefault Files Configuration\nFederated Cloud Sharing Configuration\nFile Sharing Configuration\nFile Versioning\nTransactional File Locking\nPreview Configuration\nMimetypes\nManaging the Trashbin\nIntegration\nMicrosoft Teams\nownCloud App for Splunk\nGeneral Topics\nCode Signing\nImpersonate Users\nFull Text Search\nServer\nActivity Configuration\nBackground Jobs Configuration\nCaching Configuration\nConfig Sample PHP Parameters\nConfig Apps Sample PHP Parameters\nCustom Client Repos\nEmail Configuration\nExcluded Blacklisted Files\nExternal Sites\nHarden Server\nImport SSL Cert\nIndex PHP Less URLs\nOCC Command\nLanguage Configuration\nLegal Settings Configuration\nLogging\nLogging Configuration\nRequest Tracing\nReverse Proxy Configuration\nSecurity\nBrute-Force Protection\nOAuth2\nPassword policy\nSecurity Setup Warnings\nThe HSM (Hardware Security Module) Daemon\nDependency Notes\nServer Tuning\nThird Party PHP Configuration\nVirus Scanner Support\nUI Configuration\nUser\nUser Management\nUser Roles\nReset Admin Password\nReset User Password\nUser Auth FTP SMB IMAP\nUser Auth LDAP\nUser Auth Two-Factor\nUser Auth OAuth2\nUser Provisioning API\nCustom Groups App\nGuests App\nOpenID Connect (OIDC)\nLogin Policies\nMaintenance\nUpgrading\nManual Upgrade\nDatabase Upgrade\nUpgrading from Package\nUsing the Updater App\nUpgrading PHP\nMarketplace Apps\nBackup and Restore\nBackup\nRestore\nMaintenance Mode\nExport and Import Instance Data\nManually Moving Data Folders\nEncryption\nMigrating from User Key to Master Key Encryption\nMigrating to a Different Server\nMigrating to Kiteworks PCN\nEnterprise\nAuthentication\nEnterprise Only Authentication\nKerberos Authentication\nClients\nCustom Client Repos\nCollaboration\nCollabora Online / Secure View\nMicrosoft Office Online / WOPI Integration\nDocument Classification\nClassify Documents and Enforce Policies\nExternal Storage\nLDAP Home Connector Configuration\nSharepoint integration Configuration\nWindows Network Drive Configuration\nWND Configuration Quick Guide\nFile Management\nFile Tagging\nFile Lifecycle Management\nFirewall\nFile Firewall\nInstallation\nInstalling & Upgrading ownCloud Enterprise Edition\nOracle DB Setup & Configuration\nLogging\nAuditing\nReporting\nMetrics\nGenerate a Config Report\nSecurity\nRansomware Protection\nUser Management\nShibboleth Integration\nSAML 2.0 Based SSO\nTroubleshooting\nGeneral Troubleshooting\nPath and Filename Length Limitations\nRetrieve Log Files and Configuration Settings\nRemove Non-Existent Background Jobs\nFound a Mistake? Developer Manual\nIntroduction\nGeneral Contributor Guidelines\nCommunity Code of Conduct\nCoding Style & General Guidelines\nDebugging\nPerformance Considerations\nSecurity Guidelines\nBackporting\nHelp and Communication\nDeveloping ownCloud Core\nIntroduction\nSetup Your Development Environment\nApplication Configuration\nTheming\nTranslation\nCode Standards Compliance\nTesting\nownCloud Test Pilots\nDrone Testing\nUnit Testing\nAcceptance Tests\nUser Interface Testing\nAvailable APIs\nThe External API\nThe Provisioning API\nOCS\nThe OCS Notifications API (v1)\nThe OCS REST API\nThe OCS Recipient API\nThe OCS Share API\nThe OCS TOTP Validation API\nThe OCS User Sync API\nNotify Public Link By Email\nThe Roles API\nWebDAV APIs\nThe Comments API\nThe Custom Groups Management API\nThe Files Versions API\nThe Meta API\nThe Search API\nThe Tags API\nThe Trash Bin API\nThe Public Files API\nApplication Development\nFundamental Concepts\nApplication Metadata\nThe Classloader\nConfiguration\nRouting\nControllers\nTemplates\nJavaScript\nCSS\nMiddleware\nDatabase Connectivity\nBackground Jobs\nLogging\nTesting\nThe DI Container\nFilesystem\nRESTful API\nHooks\nPublishing in the ownCloud Marketplace\nChangelog\nMarket App\nAdvanced Concepts\nCustom Filesystem Caches\nCustom Storage Backends\nNotifications\nStorage Backends\nExternal Storage Backends\nTranslation\nTwo-Factor Providers\nUser Management\nCode Signing\nTutorial\nMinimum Requirements\nThe Request Life Cycle\nThe Core Application Files\nRoutes and Controllers\nDatabase Connectivity\nCreate Template Content\nCreate a Navigation Menu\nAdd JavaScript and CSS\nWiring it Up\nApply the Finishing Touches\nAdd a RESTful API\nWriting Tests\nMobile Development\nAndroid\nLibrary Installation\nExamples\niOS\nLibrary Installation\nExamples\nBugtracker\nCode Reviews\nBug Triaging\nFound a Mistake? ownCloud Server UI\nIntroduction\nThe WebUI\nWeb Interface\nNavigating the WebUI\nPersonal Settings\nGeneral\nStorage\nSharing\nSecurity\nCustom Groups\nFiles\nAccess WebDAV\nSharing Files\nSearch & Full Text Search\nTagging Files\nComments\nVersion Control\nEncrypting Files\nManaging Deleted Files\nLarge File Uploads\nManual File Locking\nFile Lifecycle Management\nPublic Link Shares\nFederated Cloud Sharing\nManaging Connected Browsers and Devices\nOnline Collaboration\nStorage Quotas\nExternal Storage\nConnecting to SharePoint\nDesktop Mobile Sync\nApps\nActivity\nCalendar\nContacts\nMarket\nMedia Viewer App\nIntegration\nMicrosoft Teams\nSynchronization Clients\nSync iOS\nSync KDE\nSync OSX\nSync Thunderbird\nTroubleshooting\nFound a Mistake? ownCloud Server\n10.15\nDesktop App\nnext\n5.3\n5.2\nInfinite Scale Documentation\nnext\n7.1\n7.0\nMobile App for Android\nnext\n4.5\n4.4\nMobile App for iOS\nnext\n12.4\n12.3\nownCloud Main Page\nownCloud Server\nnext\n10.15\n10.14\nownCloud Web User Interfaces\nnext\nownCloud Server\nDeveloper Manual\nDeveloping ownCloud Core\nAvailable APIs\nWebDAV APIs\nThe Comments API\nnext\n10.15\n10.14\nEdit this Page\nComments API\nTable of Contents\nIntroduction\nList Comments\nCreate Comments\nUpdate Comments\nDelete Comments\nIntroduction\nThe comments API allows the following functionalities for files and folders stored in ownCloud. <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<d:error xmlns:d=\"DAV:\" xmlns:s=\"http://sabredav.org/ns\">\n<s:exception>Sabre\\DAV\\Exception\\NotFound</s:exception>\n<s:message/>\n</d:error>\nWebDAV APIs\nThe Custom Groups Management API\nAbout ownCloud\nThe Secure Collaboration Platform\nNews\nPrivacy statement\nImprint\nResources\nFAQ\nHelp\nSecurity\nChangelog\nGet started\nInteract\nRocket.Chat\nForum\nContribute\nCustomer support\n© Copyright 2011-2025, The ownCloud developers."
        },
        {
            "cluster": 1,
            "chunk_content": "It provides all of the functionality available through the UI and from the command-line. It will\ncontain a list of\nd:response\nelements, one for each comment attached\nto the file specified. The example above uses\nxmllint\n, available in the\nlibxml2\npackage to make\nthe response easier to read. The example below shows how to filter the\ninformation returned to just the\noc:message\nelement. I’ve called it\nreport-propfind.xml\nin the example below. message\nString\nThe comment’s message text. It can be up to 1,000\ncharacters in length. verb\nString\nThe type of comment to create, typically\ncomment\n. To retrieve a file id, refer to the\nrelevant section of the documentation\n. As with creating comments, we encourage you to store this in a separate\nfile and use the\n--data-binary\nswitch to include it in the request. In it, you can see, in the\nd:href\nelement the comment which was\nchanged."
        },
        {
            "cluster": 0,
            "chunk_content": "List Comments\nRequest Path\nMethod\nContent Type\nremote.php/dav/comments/files/<fileid>\nPROPFIND\ntext/xml\nTo retrieve a list of all comments, whether, for a file or folder, you\nneed to make an authenticated\nPROPFIND\nrequest, and supply it with the\npath to the file or folder that you want to retrieve the comments of, as\nin the example below. curl --silent -u username:password \\\n-X PROPFIND \\\n-H \"Content-Type: text/xml\" \\\n'http://localhost/remote.php/dav/comments/files/4' | xmllint --format -\nThe response payload will look similar to the example below. curl --silent -u username:password \\\n-X PROPFIND \\\n-H \"Content-Type: text/xml\" \\\n--data-binary \"@report-propfind.xml\" \\\n'http://localhost/remote.php/dav/comments/files/4' | xmllint --format -\nCreate Comments\nRequest Path\nMethod\nContent Type\nremote.php/dav/comments/files/<fileid>\nPOST\napplication/json\nTo create a comment, you need to send an authenticated\nPOST\nrequest\nwith a JSON body containing the details of the comment to create. The\nexample below shows how to create a comment on the file with the file id\n4.\ncurl -u username:password \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data-binary '{\"message\":\"this is my message\",\"actorType\":\"users\",\"verb\":\"comment\"}' \\\n\"http://localhost/remote.php/dav/comments/files/4\"\nThe available options are:\nParameter\nType\nDescription\nactorType\nString\nThe type of user who’s adding the comment. The comment is attributed to the user making the request. Update Comments\nRequest Path\nMethod\nContent Type\nremote.php/dav/comments/files/<fileid>/<commentid>\nPROPPATCH\ntext/xml\nTo update an existing comment, you need to send an authenticated\nPROPPATCH\nrequest and provide a\nPROPFIND\nXML element in the body. Below is an example request, which will change the comment with the id\nof 4, on the file with the file id of 4.\ncurl -u username:password \\\n-X PROPPATCH \\\n-H \"Content-Type: text/xml\" \\\n--data-binary \"@update-comment.xml\" \\\n'http://localhost/remote.php/dav/comments/files/4/4' | xmllint --format -\nBelow is an example\nPROPPATCH\nelement, which changes the message text\nbut leaves the rest of the message unchanged. <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<d:error xmlns:d=\"DAV:\" xmlns:s=\"http://sabredav.org/ns\">\n<s:exception>Sabre\\DAV\\Exception\\NotFound</s:exception>\n<s:message/>\n</d:error>\nDelete Comments\nRequest Path\nMethod\nContent Type\nremote.php/dav/comments/files/<fileid>/<commentid>\nDELETE\ntext/plain\nTo delete a comment, send an authenticated\nDELETE\nrequest, specifying\nthe path to the comment that you want to delete. curl -u username:password -X DELETE 'http://localhost/remote.php/dav/comments/files/4/5'\nIf the comment was successfully deleted, no response body would be\nreturned, but an\nHTTP/1.1 204 No Content\nstatus code will be returned."
        },
        {
            "cluster": 2,
            "chunk_content": "<?xml version=\"1.0\"?>\n<d:multistatus xmlns:d=\"DAV:\" xmlns:s=\"http://sabredav.org/ns\" xmlns:cal=\"urn:ietf:params:xml:ns:caldav\" xmlns:cs=\"http://calendarserver.org/ns/\" xmlns:card=\"urn:ietf:params:xml:ns:carddav\" xmlns:oc=\"http://owncloud.org/ns\">\n<d:response>\n<d:href>/remote.php/dav/comments/files/4/4</d:href>\n<d:propstat>\n<d:prop>\n<d:resourcetype/>\n<oc:id>1</oc:id>\n<oc:parentId>0</oc:parentId>\n<oc:topmostParentId>0</oc:topmostParentId>\n<oc:childrenCount>0</oc:childrenCount>\n<oc:message>Here is a comment.</oc:message>\n<oc:verb>comment</oc:verb>\n<oc:actorType>users</oc:actorType>\n<oc:actorId>admin</oc:actorId>\n<oc:creationDateTime>Tue, 16 May 2017 12:34:10 GMT</oc:creationDateTime>\n<oc:latestChildDateTime/>\n<oc:objectType>files</oc:objectType>\n<oc:objectId>4</oc:objectId>\n<oc:actorDisplayName>admin</oc:actorDisplayName>\n<oc:isUnread>false</oc:isUnread>\n</d:prop>\n<d:status>HTTP/1.1 200 OK</d:status>\n</d:propstat>\n</d:response>\n</d:multistatus>\nIf you want to filter the information returned in the\nd:prop\nelement\nof the XML response, you can supply a\nPROPFIND\nXML element in the body\nof the request method. <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<a:propfind xmlns:a=\"DAV:\" xmlns:oc=\"http://owncloud.org/ns\">\n<a:prop>\n<oc:message/>\n</a:prop>\n</a:propfind>\nTo use it in the request, add the\n--data-binary\nswitch, passing in the\nname of the file containing the\nPROPFIND\nXML element. <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<a:propertyupdate xmlns:a=\"DAV:\" xmlns:oc=\"http://owncloud.org/ns\">\n<a:set>\n<a:prop>\n<oc:message>This is an updated message.</oc:message>\n</a:prop>\n</a:set>\n</a:propertyupdate>\nResponse\nUpdate comment requests will return the status:\nHTTP/1.1 207 Multi-Status\n, and an XML response similar to the example\nbelow. <?xml version=\"1.0\"?>\n<d:multistatus xmlns:d=\"DAV:\" xmlns:s=\"http://sabredav.org/ns\" xmlns:cal=\"urn:ietf:params:xml:ns:caldav\" xmlns:cs=\"http://calendarserver.org/ns/\" xmlns:card=\"urn:ietf:params:xml:ns:carddav\" xmlns:oc=\"http://owncloud.org/ns\">\n<d:response>\n<d:href>/remote.php/dav/comments/files/4/4</d:href>\n<d:propstat>\n<d:prop>\n<oc:message/>\n</d:prop>\n<d:status>HTTP/1.1 200 OK</d:status>\n</d:propstat>\n</d:response>\n</d:multistatus>\nIf something goes wrong, you should receive a response similar to the\nfollowing\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<d:error xmlns:d=\"DAV:\" xmlns:s=\"http://sabredav.org/ns\">\n<s:exception>Sabre\\DAV\\Exception\\BadRequest</s:exception>\n<s:message>This should never happen (famous last words)</s:message>\n</d:error>\nIf the tag is not available, then you will receive the following\nresponse, along with an\nHTTP/1.1 404 Not Found\nstatus code."
        },
        {
            "cluster": 4,
            "chunk_content": "Response\nIf the request is successful, there will be no response body returned. However, it will have an\nHTTP/1.1 201 Created\nstatus. This makes the information more maintainable. In the\nd:status\nelement, you can see if the update was\nsuccessful or not. However, if the comment does not exist, then the following response will\nbe returned, along with an\nHTTP/1.1 404 Not Found\nstatus code."
        }
    ]
}