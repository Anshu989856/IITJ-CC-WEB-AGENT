{
    "file_name": "ocis_7.0_additional-information_knowledge-base.html",
    "file_path": "./owncloud_docs\\ocis_7.0_additional-information_knowledge-base.html",
    "chunks": [
        {
            "cluster": 2,
            "chunk_content": "Documentation for ownCloud (A Kiteworks Company)\nInfinite Scale Documentation\nIntroduction\nQuick Guide\nInfinite Scale Overview\nArchitecture and Concepts\nAvailability and Scalability\nSecurity Aspects\nDeployment\nPrerequisites\nStorage\nGeneral Storage Considerations\nNetwork File System\nS3\nPosixFS\nGeneral Information\nThe ocis init Command\nContainer Orchestration\nOffice Applications using WOPI\nSecuring oCIS\nUser Triggered GDPR Report\nServices\nGeneral Information\nDeployment Considerations\nEnvironment Variable Notes\nEnvironment Variables with Special Scope\nEnvironment Variable Changes\nRegistry\nCaching and Persistence\nGateways\nLogging\nPorts Used\nTransport Layer Security\nList of Services\nActivitylog\nAntivirus\nApp Provider\nApp Registry\nAudit\nAuth App\nAuth Basic\nAuth Bearer\nAuth Machine\nAuth Service\nClientlog\nCollaboration\nEventhistory\nFrontend\nGateway\nGraph\nGroups\nIDM\nInvitations\nIDP\nNATS\nNotifications\nOCDAV\nOCM\nOCS\nPolicies\nPostprocessing\nProxy\nSearch\nSettings\nSharing\nSSE\nStore\nStorage-Publiclink\nStorage-Shares\nStorage-System\nStorage-Users\nThumbnails\nUserlog\nUsers\nWeb\nWebDAV\nWebfinger\nWeb UI\nCustom Configuration\nCustom Theming\nMaintenance\nBackup and Restore\nBackup Considerations\nBackup\nRestore\nMaintenance Commands\nListing Space IDs\nListing User IDs\nMigration and Upgrades\nUpgrading Infinite Scale\nMonitoring\nPrometheus\nConfiguration Examples\nOffice Integration\nSearch\nDeployment Examples\nMinimal Bare Metal\nBare Metal with systemd\nContainer Setup\nUbuntu with Docker Compose\nLocal Production Setup\nDeployment on Hetzner\nSetup Federations\nScienceMesh Setup\nAdditional Information\nKnowledge Base\nInfinite Scale Documentation\n7.0\nDesktop App\nnext\n5.3\n5.2\nInfinite Scale Documentation\nnext\n7.1\n7.0\nMobile App for Android\nnext\n4.5\n4.4\nMobile App for iOS\nnext\n12.4\n12.3\nownCloud Main Page\nownCloud Server\nnext\n10.15\n10.14\nownCloud Web User Interfaces\nnext\nInfinite Scale Documentation\nAdditional Information\nKnowledge Base\nnext\n7.1\n7.0\nEdit this Page\nKnowledge Base\nTable of Contents\nIntroduction\nBrute Force Protection Against Failed Login Attempts\nCORS Settings with Keycloak\nImpacts on User Information Updates\nOCIS SSO with Authelia or authentik\nTwo-Factor Authentication with Keycloak\nIntroduction\nThe Infinite Scale knowledge base provides setup examples, best practices, contributor-created content etc. ownCloud is not responsible for any referenced content of external pages. CORS Settings with Keycloak\nWhen looking at the\nDocker Compose Examples\n, in particular the file\nocis_keycloak/config/keycloak/ocis-realm.dist.json\n, you will find the following setting responsible for CORS inside Infnite Scale:\n\"webOrigins\": [\n\"https://ocis.owncloud.test\"\n],\nTo complete this setup, you also must configure Keycloak. ScienceMesh Setup\nAbout ownCloud\nThe Secure Collaboration Platform\nNews\nPrivacy statement\nImprint\nResources\nFAQ\nHelp\nSecurity\nChangelog\nGet started\nInteract\nRocket.Chat\nForum\nContribute\nCustomer support\n© Copyright 2011-2025, The ownCloud developers."
        },
        {
            "cluster": 4,
            "chunk_content": "that can be of interest to admins as a guide on how topics can be addressed. Information on topics listed here are not intended as a full and ready-to-go guide and may not be suitable for all deployment scenarios. Instead we give an overview on how things can be achieved. Each topic contains a brief description what it is about and links to a document for more details. This keeps this document compact and readable while all the information about the particular topic has its own description page. Follow this\ndocument\nfor more details and guidance. Follow this\narticle\nfor more details and guidance."
        },
        {
            "cluster": 3,
            "chunk_content": "Provided information comes without any claim for correctness and eligibility for support. For details see the\nClaim Updates\nsection in the proxy service."
        },
        {
            "cluster": 1,
            "chunk_content": "Brute Force Protection Against Failed Login Attempts\nImplementing a brute force protection against failing login attempts is something that usually should be done before the IDP, the load balancer or whatever component sees the requests first. See the Keykloak\nServer Administration Guide\nin paragraph\nWeb Origins\nfor more details. Two-Factor Authentication with Keycloak\nIf two-factor authentication is needed for Infinite Scale, you can use Keycloak which  provides built-in support for 2FA by default via TOTP/HOTP by using an app like Google Authenticator, FreeOTP and others. For 2FA using email and SMS, Keykloak’s Service Provider Interface (SPI) offers customized authentication providers to achieve this. See\nTwo-Factor Authentication via OTP Policies\nfor more details and guidance. For use with email, refer to\nTwo-Factor Authentication via Email\n. See\nTwo-Factor Authentication with SMS\nfor more details and guidance on usage with SMS."
        },
        {
            "cluster": 0,
            "chunk_content": "Setting up\nFail2ban\nparsing Infinite Scale logs can be a possibility but is subject to a concrete setup. Impacts on User Information Updates\nWhen a user information gets updated like a group a user is member gets renamed or deleted, the user will experience a changed behavior in Infinite Scale that needs manual intervention. The source of the changed behavior is not in Infinite Scale but about the OIDC data flow. OCIS SSO with Authelia or authentik\nWritten by a contributor, the linked guide shows how to set up Infinite Scale to either work with\nAuthelia\nor\nauthentik\n. Note that the code base at the time of reference was Infinite Scale stable 2.0."
        }
    ]
}