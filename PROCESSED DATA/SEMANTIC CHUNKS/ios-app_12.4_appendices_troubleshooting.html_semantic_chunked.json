{
    "file_name": "ios-app_12.4_appendices_troubleshooting.html",
    "file_path": "./owncloud_docs\\ios-app_12.4_appendices_troubleshooting.html",
    "chunks": [
        {
            "cluster": 4,
            "chunk_content": "Documentation for ownCloud (A Kiteworks Company)\nMobile App for iOS\nIntroduction\nGetting the ownCloud iOS App\nManaging User Accounts\nConfigure Settings\nManaging Your Files\nOffline Files and Folders\nCollaboration and Links\nQuick Access\niOS Files App and 3rd Party Apps\nTask Scheduling\nSecurity\nFrequently Asked Questions (FAQ)\nAppendices\nMobile Device Management (MDM)\nTroubleshooting\nMobile App for iOS\n12.4\nDesktop App\nnext\n5.3\n5.2\nInfinite Scale Documentation\nnext\n7.1\n7.0\nMobile App for Android\nnext\n4.5\n4.4\nMobile App for iOS\nnext\n12.4\n12.3\nownCloud Main Page\nownCloud Server\nnext\n10.15\n10.14\nownCloud Web User Interfaces\nnext\nMobile App for iOS\nAppendices\nTroubleshooting\nnext\n12.4\n12.3\nEdit this Page\nTroubleshooting\nTable of Contents\nIntroduction\nLogging\nLocating App Logs and iOS App Crash Logs\nCapturing App Debug Logs\nLog HTTP Requests and Responses\nownCloud’s Log File\nWeb Server Log Files\nRecording the Screen\nIntroduction\nThis guide takes you step by step through how to troubleshoot issues with ownCloud’s iOS App for iPhone and iPad. To assist the ownCloud support personnel, please try to provide as many relevant logs as possible. ownCloud\nownCloud app or FileProvider process. ownCloud’s Log File\nownCloud server maintains an\nownCloud-specific log file\n. You can view the file using either the web interface or you can open it directly from the file system in your ownCloud server’s data directory. Configuring logging in ownCloud server. Web Server Log Files\nIt can be helpful to view your web server’s error log file to isolate any ownCloud-related problems. Mobile Device Management (MDM)\nAbout ownCloud\nThe Secure Collaboration Platform\nNews\nPrivacy statement\nImprint\nResources\nFAQ\nHelp\nSecurity\nChangelog\nGet started\nInteract\nRocket.Chat\nForum\nContribute\nCustomer support\n© Copyright 2011-2025, The ownCloud developers."
        },
        {
            "cluster": 3,
            "chunk_content": "In particular, it shows how to configure logging. Log output can help with tracking down problems and, if you report a bug, log output can help to resolve an issue more quickly. [HTTP, Request, …]\nLog item category label. You can check if it is enabled through the Log configuration panel, which is available under\nSettings\nGeneral (Admin)\n. On that page, you can adjust the log level. We recommend that you set it to a verbose level such as either\ndebug\nor\ninfo\n."
        },
        {
            "cluster": 2,
            "chunk_content": "Logging\nLocating App Logs and iOS App Crash Logs\nThere are two kinds of logs recorded in different locations:\nThe Log Created by the iOS App\nSee\nCapturing App Debug Logs\nfor how to enable app logs. On the same screen where you enable logging, you can access the log files. Touch\nShare log file\nwhich opens a new screen with all the log files created. To export the selected logs, tap the share button on the top right-hand side of the screen. The iOS Crash Log\nIf the iOS app isn’t responding or is crashing, iOS saves a crash log on the device. You can find the crash log on your device under\nSettings\nPrivacy\nAnalytics\nAnalytics Data\n. The log entries are sorted alphabetically with the app name, the date and a computer-readable timestamp. Tap the log of choice to open the crash log and export it with the share button on the top right-hand side of the screen. Capturing App Debug Logs\nEffectively debugging software requires as much relevant information as possible. You can do this by enabling and fully configuring the iOS app’s logging functionality via:\nEnabling logging with\nSettings\nLogging\nEnable Logging\nSetting the log level to \"\nDebug\n\" or \"\nInfo\n\"\nEnable:\nLog HTTP requests and responses\nStandard error output\nLog file\nOnce these have been enabled:\nClick\nBrowse\nat the end of the same settings page\nClick\nDelete all\nin the following settings page\nPerform the steps to reproduce the error\nGo back to the Logging settings click\nBrowse\nand click\nShare log file\n(the rectangle with the arrow next to the log file)\nAll iOS App logging settings enabled and set\n→\nButton to clear the logs\nLog HTTP Requests and Responses\nIf HTTP logging is enabled, log files will contain additional entries:\n2023-09-01 17:18:35.107000+0200 ownCloud[8828:307914] [dbug] | [HTTP, Request, …] Sending request:\n2023-09-01 17:18:35.332000+0200 ownCloud[8828:307914] [dbug] | [HTTP, Response, …] Received response:\nLog Content\nDescription\n2023-09-01 17:18:35.107000+0200\nTimestamp with timezone. Here you can find more information at\nRequest Tracing\nRecording the Screen\nIn iOS 11 or later, you can create a screen recording to better illustrate an error."
        },
        {
            "cluster": 1,
            "chunk_content": "RequestID:58453BEE-EEB5-44FB-9E1D-5230EE56AF38\nX-REQUEST-ID\nto find corresponding requests and responses and to find related entries in\nowncloud.log\nor Apache logs. The ownCloud iOS app sends the\nX-REQUEST-ID\nheader with every request. You’ll find the\nX-REQUEST-ID\nin the\nowncloud.log\n, and you can configure your webserver to add the\nX-REQUEST-ID\nto the logs."
        },
        {
            "cluster": 0,
            "chunk_content": "If you are not familiar with creating one,\nfollow these instructions\n."
        }
    ]
}