{
    "file_name": "desktop_next_installing.html",
    "file_path": "./owncloud_docs\\desktop_next_installing.html",
    "chunks": [
        {
            "cluster": 1,
            "chunk_content": "Documentation for ownCloud (A Kiteworks Company)\nDesktop App\nIntroduction\nInstalling the Desktop App\nUsing the Desktop App\nUsing the Virtual Filesystem\nFilename Considerations\nManage Synchronisation Conflicts\nOpen Files with Office Web Apps\nAutomatic Updating\nRemoving the Desktop App\nFAQ\nAdvanced Usage\nCommand Line Parameters\nConfiguration File\nEnvironment Variables\nLow Disk Space\nThe Command Line Client\nAppendices\nHistory and Architecture\nTroubleshooting\nDesktop App\nnext\nDesktop App\nnext\n5.3\n5.2\nInfinite Scale Documentation\nnext\n7.1\n7.0\nMobile App for Android\nnext\n4.5\n4.4\nMobile App for iOS\nnext\n12.4\n12.3\nownCloud Main Page\nownCloud Server\nnext\n10.15\n10.14\nownCloud Web User Interfaces\nnext\nDesktop App\nInstalling the Desktop App\nnext\n5.3\n5.2\nEdit this Page\nInstalling the Desktop App\nTable of Contents\nIntroduction\nSystem Requirements and Installation\nSystem Requirements\nConfiguration Files\nInstallation on macOS and Windows\nInstallation on Linux\nNative Installation\nAppImage\nInstalling Shell Integration Packages\nCustomizing the Windows Installation\nMicrosoft GPO (Group Policy Object) Installer\nFeatures\nInstallation\nChanging Installed Features\nInstallation Folder\nDisabling Automatic Updates\nLaunch After Installation\nNo Reboot After Installation\nDefine Your Own Synchronization Folder Icon\nConnection Wizard\nIntroduction\nThe Desktop App enables users to access and sync files and folders from their ownCloud, work on remote files right from the desktop as if they were stored on their computer – because they are. Continuous synchronization to and from the ownCloud server provides ease of use combined with comprehensive access control. System Requirements and Installation\nYou can download the latest version of the ownCloud Desktop App from the\nDesktop App Download\npage. ownCloud provides Linux packages for a variety of Linux distributions, see the list of supported distros below. Windows 11\nWindows 10 or later (x64)\nVersion 1809+\nmacOS\nx86-64 or ARM64\n(Apple Silicon)\nmacOS 14 Sonoma\nmacOS 13 Ventura\nmacOS 12 Monterey\nLinux\n(x86-64)\nThe\nAppImage\nbuild of the ownCloud Desktop App is available to support most Linux platforms\nFor Linux distributions, we support, if technically feasible, the latest 2 versions per platform and the previous Ubuntu\nLTS\n. On Debian invoke the following command to update all signatures:\nsudo apt-key adv --refresh-keys --keyserver keyring.debian.org\nFor Ubuntu, use:\nsudo apt-key adv --refresh-keys --keyserver keyserver.ubuntu.com\nAppImage\nAn\nAppImage\nbuild of the ownCloud Desktop App is available to support more Linux platforms. mkdir -p ~/Applications\ncd ~/Applications\nwget https://download.owncloud.com/desktop/ownCloud/stable/latest/linux-appimage/ownCloud-5.3.2.15463-x86_64.AppImage\nThe following steps are only necessary when the AppImageLauncher is\nnot\nused:\nMake the AppImage executable:\nsudo chmod +x ownCloud-5.3.2.15463-x86_64.AppImage\nStart the AppImage by invoking the following command:\n~/Applications/ownCloud-5.3.2.15463-x86_64.AppImage\nNote when you start the AppImage after setting it to be executable, AppImageLauncher will open if installed. Installing Shell Integration Packages\nownCloud supports installing shell integration packages, which allow you to add overlay icons and a special context menu for your file browsers, via a bash script guided installation for Linux based systems. The following quick command installing the extensions requires\ncurl\nto be available on your system:\ncurl -s https://raw.githubusercontent.com/owncloud/client-desktop-install-shell-integration/main/install-extensions.sh | bash -s - --auto\nIf curl is not available or you are not sure or want to read more, see\nInstall ownCloud Linux Shell Extensions\nfor more details. Customizing the Windows Installation\nIf you just want to install the ownCloud Desktop App on your local system, you can simply\ndownload\nand launch the relevant\n.msi\nfile and configure it in the wizard that pops up. Microsoft GPO (Group Policy Object) Installer\nownCloud provides two versions of the Microsoft Installer:\n*.x64.msi\n: This is the installer for regular users. Features\nThe MSI installer provides several features that can be installed or removed individually, which you can also control via command-line, if you are automating the installation, then run the following command:\nmsiexec /passive /i ownCloud-5.3.2.15463.x64.msi\nThe command will install the ownCloud Desktop App into the default location with the default features enabled. If you want to disable, e.g., desktop shortcut icons you can simply change the above command to the following:\nmsiexec /passive /i ownCloud-5.3.2.15463.x64.msi REMOVE=DesktopShortcut\nSee the following table for a list of available features:\nFeature\nEnabled by default\nDescription\nProperty to disable. NO_START_MENU_SHORTCUTS\nShellExtensions\nYes\nAdds Explorer integration\nNO_SHELL_EXTENSIONS\nInstallation\nYou can also choose to only install the Desktop App itself by using the following command:\nmsiexec /passive /i ownCloud-5.3.2.15463.x64.msi ADDDEFAULT=Client\nIf you for instance want to install everything but the\nDesktopShortcut\nand the\nShellExtensions\nfeature, you have two possibilities:\nYou explicitly name all the features you actually want to install (whitelist) where\nClient\nis always installed anyway. msiexec /passive /i ownCloud-5.3.2.15463.x64.msi ADDDEFAULT=StartMenuShortcuts\nYou pass the\nNO_DESKTOP_SHORTCUT\nand\nNO_SHELL_EXTENSIONS\nproperties. msiexec /passive /i ownCloud-5.3.2.15463.x64.msi NO_DESKTOP_SHORTCUT=\"1\"\nNO_SHELL_EXTENSIONS=\"1\"\nThe ownCloud .msi file remembers these properties, so you don’t need to specify them on upgrades. If you want to add the desktop shortcut later, run the following command:\nmsiexec /passive /i ownCloud-5.3.2.15463.x64.msi ADDDEFAULT=\"DesktopShortcut\"\nIf you want to remove it, simply run the following command:\nmsiexec /passive /i ownCloud-5.3.2.15463.x64.msi REMOVE=\"DesktopShortcut\"\nWindows keeps track of the installed features and using\nREMOVE\nor\nADDDEFAULT\nwill only affect the mentioned features. msiexec /passive /i ownCloud-5.3.2.15463.x64.msi INSTALLDIR=\"C:\\Program Files\\Non Standard ownCloud Client Folder\"\nBe careful when using PowerShell instead of\ncmd.exe\n, it can be tricky to get the whitespace escaping right there. msiexec /passive /i ownCloud-5.3.2.15463.x64.msi SKIPAUTOUPDATE=\"1\"\nLaunch After Installation\nTo launch the Desktop App automatically after installation, you can pass the\nLAUNCH\nproperty. msiexec /i ownCloud-5.3.2.15463.x64.msi LAUNCH=\"1\"\nThis option also removes the checkbox to let users decide if they want to launch the Desktop App for non-passive/quiet mode. No Reboot After Installation\nThe ownCloud Desktop App schedules a reboot after installation to make sure the Explorer extension is correctly (un)loaded. msiexec /i ownCloud-5.3.2.15463.x64.msi REBOOT=ReallySuppress\nThis will make msiexec exit with error ERROR_SUCCESS_REBOOT_REQUIRED (3010). msiexec /i ownCloud-5.3.2.15463.x64.msi DO_NOT_SCHEDULE_REBOOT=\"1\"\nDefine Your Own Synchronization Folder Icon\nWhen setting up a new synchronization, ownCloud automatically assigns its icon to the synchronization folder for ease of identification. Though you can change this icon, it would be reverted back on next reboot to the ownCloud icon. The current content may look like this:\n[.ShellClassInfo]\nIconResource=C:\\Program Files\\ownCloud\\owncloud.exe,0\n[ViewState]\nMode=\nVid=\nFolderType=Generic\nAdd the following to the current content at the bottom:\n[ownCloud]\nUpdateIcon=false\nMake the\ndektop.ini\nfile hidden again by undoing the\nAdvanced Settings\nchanges from the first step. Introduction\nUsing the Desktop App\nAbout ownCloud\nThe Secure Collaboration Platform\nNews\nPrivacy statement\nImprint\nResources\nFAQ\nHelp\nSecurity\nChangelog\nGet started\nInteract\nRocket.Chat\nForum\nContribute\nCustomer support\n© Copyright 2011-2025, The ownCloud developers."
        },
        {
            "cluster": 3,
            "chunk_content": "There are Desktop Apps for\nLinux\n,\nmacOS\n, and\nMicrosoft Windows\navailable. System Requirements\nDepending on the operating system used, some minimum system requirements need to be met. OS\nVersion\nWindows\nWhen using external drives storing the synchronization data, NTFS is required. Also see the\nVFS support\ndocumentation. Installation on macOS and Windows\nInstallation on macOS and Windows is the same as for any software application: download the installer,  double-click it to launch the installation and follow the installation wizard. Linux users should also have a password manager enabled, such as\nGNOME Keyring\nor\nKWallet\n, so that the Desktop App can log in automatically. Note, our description focuses on the GNOME desktop. Adapt the procedures for other desktop environments accordingly. Native Installation\nLinux users must follow the instructions on the\ndownload\npage to add the appropriate repository for their Linux distribution, install the signing key and use their package managers to install the Desktop App. Linux users will also update their Desktop App via package manager. The Desktop App will display a notification when an update is available. Note to see\nInstalling Shell Integration Packages\n. You will also find links to source code archives and older versions on the download page. You need to install them manually, see\nInstalling Shell Integration Packages\n. This script covers main systems and file browsers, but by nature not all possible flavours and combinations. For the examples below, the x64 installer is used. The installer UI has multiple translations to guide end users through the install procedure. *.x64.GPO.msi\n: The GPO installer works better for automated deployments in managed environments. It is only available in English. The desktop client itself comes with all the usual languages for the user interface. Client\nYes,\nrequired\nThe actual client\nDesktopShortcut\nYes\nAdds a shortcut to the desktop."
        },
        {
            "cluster": 4,
            "chunk_content": "When using Linux, you can also use AppImage. On Linux, when changing the deployment method like from native to AppImage, you can reuse an existing configuration file without changes. Installation on Linux\nNo matter whether the Desktop App is installed natively or used as an AppImage, you can add command line parameters when starting up post installation. You can download the AppImage at the\nLinux section of the Download Desktop App\npage. AppImage is an alternative way to use Linux applications — instead of having multiple files in several places making up a package, the entire application is contained in a single file ending with an\n.AppImage\nsuffix, including all necessary dependencies and libraries. ownCloud provides a single AppImage based on CentOS 7, which runs on all modern and most older Linux platforms. Known limitations for the 4.x AppImages\nFor Ubuntu 22.04, Debian 11 and other very recent distributions, you need to install\nlibfuse2\nas a prerequisite. Shell integration packages, which means overlay icons and a special context menu for your file browsers, is not included in the AppImage. Installing\nlibfuse2\nif required\nCheck if\nlibfuse2\nis already installed:\ndpkg -l libfuse2\nCheck if there is an installation candidate for\nlibfuse2\n:\nsudo apt-cache show libfuse2\nInstall\nlibfuse2\n:\nsudo apt install libfuse2\nInstall the AppImageLauncher app\nSee the\nInstall AppImageLauncher\nwiki for details about installing it. AppImageLauncher does not need to be started. It hooks in when you start an AppImage. There are different responses when starting an AppImage:\nHow to launch an AppImage\nWhen you open an AppImage file via your file browser that you have not opened before then double click on it:\nFirst time usage\nAfter opening an AppImage, if AppImageLauncher has been started for the first time, it will ask you to define some basic settings:\nAppImage Integration Question\nPost first time configuration or when you open the AppImage file via your file browser, for example by double clicking on it:\nInstall and run the Desktop App AppImage\nThe example below uses the terminal but you can also use the GUI. For details see\nHow to run an AppImage\n. Go to the\ndownload\npage and download the recent AppImage into the Applications folder in your home directory. Note the folder name\nApplications\ncan be any name and helps to collect all AppImages you have on one location. The AppImageLauncher, if used, has this name predefined unless you change it. Automatically updating the AppImage\nFor automatically updating the AppImage see the\nAutomatic Updating of the Desktop App - Linux\ndocumentation."
        },
        {
            "cluster": 0,
            "chunk_content": "Configuration Files\nRegardless of the type of physical installation, a configuration file will be created when the app is started for the first time. The location of the configuration file is described in the\nConfiguration File\ndocumentation. When deleting an existing configuration file, no data synced locally will be deleted, but the app will start the\nInstallation Wizard\nand you have to configure again. If you want to deploy from scratch again, you can safely delete the configuration file if one exists. In such a case, check for existing sync folders which may need to be deleted too. For more information about this setting see the\nDisabling Automatic Updates\nsection. For Windows, see the\nCustomizing the Windows Installation\nsection describing installer configuration options. One parameter to mention is the option\n-s\n. This option forces the settings page to be shown on startup. When the extension is installed, you need to log off and re-login to activate the changes. This can be solved by refreshing the keys. Replace the URL from the example with the actual URL from the download page. Beside an auto mode, you can also manually define parameters from a list. You cannot use these to change the installed features, if you want to do that, see the next section. Changing Installed Features\nYou can change the installed features later by using\nREMOVE\nand\nADDDEFAULT\nproperties. Compare\nREMOVE\nand\nADDDEFAULT\non the Windows Installer Guide. You cannot specify REMOVE on initial installation as it will disable all features. Installation Folder\nYou can adjust the installation folder by specifying the\nINSTALLDIR\nproperty like this. Specifying the\nINSTALLDIR\nlike this only works on first installation, you cannot simply re-invoke the .msi with a different path. If you still need to change it, uninstall it first and reinstall it with the new path. Disabling Automatic Updates\nTo disable automatic updates, you can pass the\nSKIPAUTOUPDATE\nproperty. This option does not have any effect without GUI. If you’re taking care of the reboot yourself, you can set the\nREBOOT\nproperty. If your deployment tooling interprets this as an actual error and you want to avoid that, you may want to set the\nDO_NOT_SCHEDULE_REBOOT\ninstead. In the Explorer, go to the\nView\ntab\nand click on the\nOptions\nicon. In\nFolder Options\nclick on the\nView\ntab. In\nAdvanced Settings\n, change the marked items. To do so, open it with an editor. Connection Wizard\nWhen all is set up and the app has been started for the first time, you will be directed to the\nConnection Wizard\nto set up a new synchronization connection. The connection wizard will always be shown if no connection has been set up."
        },
        {
            "cluster": 2,
            "chunk_content": "After it is installed and configured, the Desktop App will automatically keep itself updated if not manually disabled which you can change when using Windows. While not necessary during general usage, it can be helpful if system tray icons are not available any more within your desktop environment. Using GNOME on recent distributions like Ubuntu 22.04, Debian 11 or others, the system tray is typically no longer available. This makes it hard to get back an app that has been minimized to the system tray. You have to install an extension in order to restore the system tray in this case in order to be able to find and restore the minimized application. For distributions like Ubuntu 22.04 or Debian 11, use the command below to install the extension:\nsudo apt install gnome-shell-extension-appindicator\nOn distributions based on Red Hat Enterprise Linux (including AlmaLinux and Rocky Linux), you first need to install another package:\nsudo dnf install epel-release\nThen, proceed with the following command. On Fedora, it is sufficient to just run the following command:\nsudo dnf install gnome-extensions-app gnome-shell-extension-appindicator\nFor all other distributions, follow the\nAppIndicator Support\ninstallation documentation. For this particular system tray icon extension, the name shown of the extension may depend and can be like\nUbuntu AppIndicators\nor\nAppIndicator and KStatusNotifierItem Support\n. Once enabled, the system tray is shown again within the desktop environment. Overlay icons and a special context menu for your file browsers need to be installed manually. On Debian-based systems, it may happen after a while that when running\nsudo apt update\n, a notice about a signature verification error is returned. For details see\nissue with\nlibfuse\non Ubuntu >=22.04 or Debian 11\nSetting up FUSE 2.x alongside of FUSE 3.x on recent Ubuntu (>=22.04)\n. NO_DESKTOP_SHORTCUT\nStartMenuShortcuts\nYes\nAdds shortcuts to the start menu. Folder icon details are usually stored in the hidden desktop.ini file which is located\ninside\nthe folder under scrutiny. To make a manually defined icon persistent, a small change in this\ndesktop.ini\nfile is necessary. See the following description to do so:\nMake the\ndesktop.ini\nvisible because it is hidden by default:\nOpen the Desktop app, click on the three dots and there on\nShow in Explorer\n. Now, as the\ndesktop.ini\nfile is visible, add a setting to make an icon change persistent. After that, the\ndesktop.ini\nfile will be hidden again. Finally apply any icon of your choice to the synchronization folder."
        }
    ]
}