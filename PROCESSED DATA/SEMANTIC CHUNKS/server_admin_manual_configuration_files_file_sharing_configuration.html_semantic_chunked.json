{
    "file_name": "server_admin_manual_configuration_files_file_sharing_configuration.html",
    "file_path": "./owncloud_docs\\server_admin_manual_configuration_files_file_sharing_configuration.html",
    "chunks": [
        {
            "cluster": 3,
            "chunk_content": "Documentation for ownCloud (A Kiteworks Company)\nownCloud Server\nIntroduction\nAdmin Manual\nIntroduction\nUseful Pages\nFAQ\nGDPR\nInstallation\nDeployment Considerations\nDeployment Recommendations\nNFS\nSystem Requirements\nConfiguration Notes and Tips\nInstallation Options\nInstalling With Docker\nManual Installation on Linux\nDetailed Installation Guide\nDetailed Installation on Ubuntu (various versions)\nQuick Installation Guide\nOn Ubuntu 20.04\nOn Ubuntu 22.04\nLinux Package Manager\nLinux Package Manager Installation\nThe Installation Wizard\nTroubleshooting\nChanging Your ownCloud URL\nInstalling and Managing Apps\nSupported Apps\nMedia Viewer\nSELinux Configuration\nUsing Let’s Encrypt SSL Certificates\nUsing Letsencrypt\nApache\nConfiguration\nDatabase\nDatabase Conversion\nDatabase Configuration\nEncryption\nEncryption Configuration\nEncryption Configuration Quick Guide\nExternal Storage\nExternal Storage Configuration\nExternal Storage Authentication Mechanisms\nAmazonS3\nDropbox\nFTP\nGoogle\nLocal\nownCloud\nS3 as Primary\nSFTP\nSMB\nWebDAV\nFiles and Sharing\nBig File Upload Configuration\nManual File Locking\nDefault Files Configuration\nFederated Cloud Sharing Configuration\nFile Sharing Configuration\nFile Versioning\nTransactional File Locking\nPreview Configuration\nMimetypes\nManaging the Trashbin\nIntegration\nMicrosoft Teams\nownCloud App for Splunk\nGeneral Topics\nCode Signing\nImpersonate Users\nFull Text Search\nServer\nActivity Configuration\nBackground Jobs Configuration\nCaching Configuration\nConfig Sample PHP Parameters\nConfig Apps Sample PHP Parameters\nCustom Client Repos\nEmail Configuration\nExcluded Blacklisted Files\nExternal Sites\nHarden Server\nImport SSL Cert\nIndex PHP Less URLs\nOCC Command\nLanguage Configuration\nLegal Settings Configuration\nLogging\nLogging Configuration\nRequest Tracing\nReverse Proxy Configuration\nSecurity\nBrute-Force Protection\nOAuth2\nPassword policy\nSecurity Setup Warnings\nThe HSM (Hardware Security Module) Daemon\nDependency Notes\nServer Tuning\nThird Party PHP Configuration\nVirus Scanner Support\nUI Configuration\nUser\nUser Management\nUser Roles\nReset Admin Password\nReset User Password\nUser Auth FTP SMB IMAP\nUser Auth LDAP\nUser Auth Two-Factor\nUser Auth OAuth2\nUser Provisioning API\nCustom Groups App\nGuests App\nOpenID Connect (OIDC)\nLogin Policies\nMaintenance\nUpgrading\nManual Upgrade\nDatabase Upgrade\nUpgrading from Package\nUsing the Updater App\nUpgrading PHP\nMarketplace Apps\nBackup and Restore\nBackup\nRestore\nMaintenance Mode\nExport and Import Instance Data\nManually Moving Data Folders\nEncryption\nMigrating from User Key to Master Key Encryption\nMigrating to a Different Server\nMigrating to Kiteworks PCN\nEnterprise\nAuthentication\nEnterprise Only Authentication\nKerberos Authentication\nClients\nCustom Client Repos\nCollaboration\nCollabora Online / Secure View\nMicrosoft Office Online / WOPI Integration\nDocument Classification\nClassify Documents and Enforce Policies\nExternal Storage\nLDAP Home Connector Configuration\nSharepoint integration Configuration\nWindows Network Drive Configuration\nWND Configuration Quick Guide\nFile Management\nFile Tagging\nFile Lifecycle Management\nFirewall\nFile Firewall\nInstallation\nInstalling & Upgrading ownCloud Enterprise Edition\nOracle DB Setup & Configuration\nLogging\nAuditing\nReporting\nMetrics\nGenerate a Config Report\nSecurity\nRansomware Protection\nUser Management\nShibboleth Integration\nSAML 2.0 Based SSO\nTroubleshooting\nGeneral Troubleshooting\nPath and Filename Length Limitations\nRetrieve Log Files and Configuration Settings\nRemove Non-Existent Background Jobs\nFound a Mistake? ownCloud Server UI\nIntroduction\nThe WebUI\nWeb Interface\nNavigating the WebUI\nPersonal Settings\nGeneral\nStorage\nSharing\nSecurity\nCustom Groups\nFiles\nAccess WebDAV\nSharing Files\nSearch & Full Text Search\nTagging Files\nComments\nVersion Control\nEncrypting Files\nManaging Deleted Files\nLarge File Uploads\nManual File Locking\nFile Lifecycle Management\nPublic Link Shares\nFederated Cloud Sharing\nManaging Connected Browsers and Devices\nOnline Collaboration\nStorage Quotas\nExternal Storage\nConnecting to SharePoint\nDesktop Mobile Sync\nApps\nActivity\nCalendar\nContacts\nMarket\nMedia Viewer App\nIntegration\nMicrosoft Teams\nSynchronization Clients\nSync iOS\nSync KDE\nSync OSX\nSync Thunderbird\nTroubleshooting\nFound a Mistake? ownCloud Server\n10.15\nDesktop App\nnext\n5.3\n5.2\nInfinite Scale Documentation\nnext\n7.1\n7.0\nMobile App for Android\nnext\n4.5\n4.4\nMobile App for iOS\nnext\n12.4\n12.3\nownCloud Main Page\nownCloud Server\nnext\n10.15\n10.14\nownCloud Web User Interfaces\nnext\nownCloud Server\nAdmin Manual\nConfiguration\nFiles and Sharing\nFile Sharing Configuration\nnext\n10.15\n10.14\nEdit this Page\nFile Sharing\nTable of Contents\nIntroduction\nGeneral Notes\nSettings Explained\nAllow apps to use the Share API\nAllow users to share via link\nSet default expiration date for user shares\nSet default expiration date for group shares\nSet default expiration date for remote shares\nAutomatically accept new incoming local user shares\nAllow resharing\nAllow sharing with groups\nDefault user and group share permissions\nRestrict users to only share with users in their groups\nRestrict users to only share with groups they are a member of\nAllow users to send mail notification for shared files to other users\nExclude groups from sharing\nAllow username autocompletion in share dialog\nExtra field to display in autocomplete results\nBlacklist Groups From Receiving Shares\nTransferring Files to Another User\nCreating Persistent File Shares\nCreate Shares Programmatically\nocc files_external:create\nocc files_external:import\nShare Permissions\nPermissions Masks\nFile Operations Shorthand for the Later Table\nIntroduction\nThis section describes how to set general configuration rules for sharing files. From this section, ownCloud users can:\nShare files with their ownCloud groups and other users on the same ownCloud server\nShare files with ownCloud users on other ownCloud servers, for more details see\nFederated Cloud Sharing Configuration\n. Create public link shares for people who are not ownCloud users. Allow users to share via link\nCheck this option to enable creating public link shares for people who are not ownCloud users via hyperlink. Allow users to send mail notification for shared files\nCheck this option to enable sending notifications from ownCloud. To use this functionality, your ownCloud server must be configured to send mail. This setting does not apply to the Federated Cloud sharing feature. If\nFederated Cloud Sharing\nis enabled, users can still share items with any users on any instances (\nincluding the one they are on\n) via a remote share. Allow users to send mail notification for shared files to other users\nCheck this option to enable users to send an email notification to every ownCloud user that the file is shared with. Allow username autocompletion in share dialog\nCheck this option to enable auto-completion of ownCloud usernames. Restrict enumeration to group members\nCheck this option to restrict auto-completion of ownCloud usernames to only those users who are members of the same group(s) that the user is in. Extra field to display in autocomplete results\nThe autocomplete dropdowns in ownCloud usually show the display name of other users when it is set. In these cases, ownCloud administrators can blacklist one or more groups so that they cannot receive shares. In ownCloud, files are tied to their owners. Personal Share\nsudo -u www-data ./occ files_external:create \\\n/my_share_name windows_network_drive \\\npassword::logincredentials \\\n--config={host=127.0.0.1, share='home', root='$user', domain='owncloud.local'} \\\n--user someuser\nor\nsudo -u www-data ./occ files_external:create \\\n/my_share_name windows_network_drive \\\npassword::logincredentials \\\n--config host=127.0.0.1 \\\n--config share='home' \\\n--config root='$user' \\\n--config domain='somedomain.local' \\\n--user someuser\nGeneral Share\nsudo -u www-data ./occ files_external:create \\\n/my_share_name windows_network_drive \\\npassword::logincredentials \\\n--config={host=127.0.0.1, share='home', root='$user', domain='owncloud.local'}\nor\nsudo -u www-data ./occ files_external:create \\\n/my_share_name windows_network_drive \\\npassword::logincredentials \\\n--config host=127.0.0.1 \\\n--config share='home' \\\n--config root='$user' \\\n--config domain='somedomain.local'\nocc files_external:import\nYou can create general and personal shares passing the configuration details via JSON files, using the\nocc files_external:import\ncommand. {\n\"mount_point\": \"\\/my_share_name\",\n\"storage\": \"OCA\\\\windows_network_drive\\\\lib\\\\WND\",\n\"authentication_type\": \"password::logincredentials\",\n\"configuration\": {\n\"host\": \"127.0.0.1\",\n\"share\": \"home\",\n\"root\": \"$user\",\n\"domain\": \"owncloud.local\"\n},\n\"options\": {\n\"enable_sharing\": false\n},\n\"applicable_users\": [],\n\"applicable_groups\": []\n}\nShare Permissions\nPermissions Masks\nPermission\nValue\nweb UI Value\nREAD\n1\nUPDATE\n2\ncan update\nCREATE\n4\ncan create\nDELETE\n8\ncan delete\nSHARE\n16\ncan reshare\nFile Operations Shorthand for the Later Table\nOperation\nDescription\ndownload\nDownload/read/get a file or display a folder’s contents."
        },
        {
            "cluster": 1,
            "chunk_content": "Developer Manual\nIntroduction\nGeneral Contributor Guidelines\nCommunity Code of Conduct\nCoding Style & General Guidelines\nDebugging\nPerformance Considerations\nSecurity Guidelines\nBackporting\nHelp and Communication\nDeveloping ownCloud Core\nIntroduction\nSetup Your Development Environment\nApplication Configuration\nTheming\nTranslation\nCode Standards Compliance\nTesting\nownCloud Test Pilots\nDrone Testing\nUnit Testing\nAcceptance Tests\nUser Interface Testing\nAvailable APIs\nThe External API\nThe Provisioning API\nOCS\nThe OCS Notifications API (v1)\nThe OCS REST API\nThe OCS Recipient API\nThe OCS Share API\nThe OCS TOTP Validation API\nThe OCS User Sync API\nNotify Public Link By Email\nThe Roles API\nWebDAV APIs\nThe Comments API\nThe Custom Groups Management API\nThe Files Versions API\nThe Meta API\nThe Search API\nThe Tags API\nThe Trash Bin API\nThe Public Files API\nApplication Development\nFundamental Concepts\nApplication Metadata\nThe Classloader\nConfiguration\nRouting\nControllers\nTemplates\nJavaScript\nCSS\nMiddleware\nDatabase Connectivity\nBackground Jobs\nLogging\nTesting\nThe DI Container\nFilesystem\nRESTful API\nHooks\nPublishing in the ownCloud Marketplace\nChangelog\nMarket App\nAdvanced Concepts\nCustom Filesystem Caches\nCustom Storage Backends\nNotifications\nStorage Backends\nExternal Storage Backends\nTranslation\nTwo-Factor Providers\nUser Management\nCode Signing\nTutorial\nMinimum Requirements\nThe Request Life Cycle\nThe Core Application Files\nRoutes and Controllers\nDatabase Connectivity\nCreate Template Content\nCreate a Navigation Menu\nAdd JavaScript and CSS\nWiring it Up\nApply the Finishing Touches\nAdd a RESTful API\nWriting Tests\nMobile Development\nAndroid\nLibrary Installation\nExamples\niOS\nLibrary Installation\nExamples\nBugtracker\nCode Reviews\nBug Triaging\nFound a Mistake? If so, disable the plugin and recheck. When clicked, the administrator can choose the language for public mail notifications for shared files. What this means is, that email notifications will be sent in the language of the user that shared an item. By default the language is the share owner’s language. However, it can be changed to any of the currently available languages. It is also possible to change this setting on the command-line by using the\nocc config:app:set command\n, as in this example:\nsudo -u www-data ./occ \\\nconfig:app:set \\\ncore \\\nshareapi_public_notification_lang \\\n--value '<language code>'\nIn the example above, the\n<language code>\nis an\nISO 3166-1 alpha-2 two-letter country code\n, such as\nde\n,\ngb\n,\nus\n,\nes\nor others. More information about\npending shares\ncan be found in the release notes. If it’s not set, they show the user ID / login name, as display names are not unique you can run into situations where you cannot distinguish the proposed users. This option enables to add mail addresses or user ID’s to make them distinguishable. It also transfers the outgoing shares and metadata info associated with those files (shares, tags, and comments, etc). The command’s configuration options can be provided either as individual arguments or collectively, as a JSON object. For more information about the command, refer to the\nocc files-external documentation\n."
        },
        {
            "cluster": 2,
            "chunk_content": "General Notes\nThe sharing policy is configured at\nSettings\nAdmin\nSharing\n. If you don’t see the sharing section:\nCheck if you have installed an AdBlock browser plugin. You have control of a number of user permissions on file shares:\nAllow users to share files\nAllow users to create public link shares\nAllow public uploads to public link shares\nEnforce password protection on public link shares\nSet default expiration date on public link shares\nAllow users to send mail notification for shared files\nSet the language used for public mail notification for shared files\nAllow users to share file via social media\nSet default expiration date for user shares\nSet the number of days to expire after\nEnforce as maximum expiration date\nSet default expiration date for group shares\nSet the number of days to expire after\nEnforce as maximum expiration date\nSet default expiration date for remote shares\nSet the number of days to expire after\nEnforce as maximum expiration date\nAutomatically accept new incoming local user shares\nAllow resharing\nAllow sharing with groups\nRestrict users to only share with users in their groups\nRestrict users to only share with groups they are a member of\nAllow users to send mail notification for shared files to other users\nExclude groups from creating shares\nAllow username autocompletion in share dialog\nRestrict enumeration to group members\nDefault user and group share permissions\nExtra field to display in autocomplete results\nownCloud includes a\nShare Link Password Policy app\n. Settings Explained\nAllow apps to use the Share API\nCheck this option to enable users to share files. If this is not checked, no users can create file shares. Allow public uploads\nCheck this option to allow anyone to upload files to public link shares. Enforce password protection of public link shares\nCheck these options to force users to set a password on public link shares. Passwords can be enforced on any or all of read-only, read-write, read-write-delete and upload-only (File Drop) public link shares. This does not apply to local user and group shares. Allow users to share file via social media\nCheck this option to enable displaying of a set of links that allow for quickly sharing files and share links via\nTwitter\n,\nFacebook\n,\nGoogle+\n,\nDiaspora\n, and email. Automatically accept new incoming local user shares\nDisabling this option activates the \"Pending Shares\" feature. Users will be notified and have to accept new incoming user shares before they appear in the file list and are available for access giving them more control over their account. Allow resharing\nCheck this option to enable users to re-share files shared with them. Allow sharing with groups\nCheck this option to enable users to share with groups. Default user and group share permissions\nAdministrators can define the permissions for user/group shares that are set by default when users create new shares. As shares are created instantly after choosing the recipient, administrators can set the default to e.g. read-only to avoid creating shares with too many permissions unintentionally. Restrict users to only share with users in their groups\nCheck this option to confine sharing within group memberships. Restrict users to only share with groups they are a member of\nWhen this option is enabled, users can only share with groups they are a member of. They can still share with all users of the instance but not with groups they are not a member of. To restrict sharing to users in groups the sharer is a member of, the option\nRestrict users to only share with users in their groups\ncan be used. More information about\ngranular sharing restrictions\ncan be found in the release notes. Exclude groups from sharing\nCheck this option to prevent members of specific groups from creating any file shares. When you check this, you will get a dropdown list of all your groups to choose from. Members of excluded groups can still receive shares, but not create any. Blacklist Groups From Receiving Shares\nSometimes it is necessary or desirable to block groups from receiving shares. For example, if a group has a significant number of users (> 5,000) or if it is a system group, it can be advisable to block it from receiving shares. To blacklist one or more groups via the Web UI, under\nSettings\nAdmin\nSharing\n, add one or more groups to the\nFiles Sharing\nlist. As you type the group’s name, if it exists, it will appear in the drop-down list where you can select it. One solution to get around this issueis, to create persistent shares for your users. You can retain ownership of them, or you could create a special user for the purpose of establishing permanent file shares. Simply create a shared folder in the usual way, and share it with the users or groups who need to use it. Set the appropriate permissions on it and the share is independent which users come and go, the file shares will remain. Because all files added to the share or edited in it are automatically owned by the owner of the share regardless of who adds or edits them. Create Shares Programmatically\nIf you need to create new shares using command-line scripts, there are two available option."
        },
        {
            "cluster": 4,
            "chunk_content": "Set default expiration date of public link shares\nCheck this option to set a default expiration date on public link shares. Check\nEnforce as maximum expiration date\nto limit the maximum expiration date to be the default. Users can choose an earlier expiration date if they wish. Set default expiration date for user shares\nCheck this option to set a default expiration date when sharing with another user. The user can change or remove the default expiration date of a share. Set the number of days to expire after\nSet the default number of days that user shares will expire. The default value is 7 days. Enforce as maximum expiration date\nCheck this option to limit the maximum expiration date to be the default. Users can choose an earlier expiration date if they wish. Set default expiration date for group shares\nCheck this option to set a default expiration date when sharing with a group. The user can change or remove the default expiration date of a share. Set the number of days to expire after\nSet the default number of days that group shares will expire. The default value is 7 days. Enforce as maximum expiration date\nCheck this option to limit the maximum expiration date to be the default. Users can choose an earlier expiration date if they wish. Set default expiration date for remote shares\nCheck this option to set a default expiration date when sharing with a remote user. The user can change or remove the default expiration date of a share. Set the number of days to expire after\nSet the default number of days that remote shares will expire. The default value is 7 days. Enforce as maximum expiration date\nCheck this option to limit the maximum expiration date to be the default. Users can choose an earlier expiration date if they wish."
        },
        {
            "cluster": 0,
            "chunk_content": "Transferring Files to Another User\nYou may transfer files from one user to another with\nocc\n. The command transfers either all or a limited set of files from one user to another. Incoming shares are\nnot\nmoved, as the sharing user holds the ownership of the respective files. This is useful when you have to transfer a user’s files to another user before you delete them. Trashbin contents are not transferred. Here is an example of how to transfer all files from one user to another. sudo -u www-data ./occ files:transfer-ownership \\\n<source-user> \\\n<destination-user>\nHere is an example of how to transfer\na limited group\na single folder from one user to another. In it,\nfolder/to/move\n, and any file and folder inside it will be moved to\n<destination-user>\n. sudo -u www-data ./occ files:transfer-ownership \\\n--path=\"folder/to/move\" \\\n<source-user> \\\n<destination-user>\nWhen using this command keep two things in mind:\nThe directory provided to the\n--path\nswitch\nmust\nexist inside\ndata/<source-user>/files\n. The directory (and its contents) won’t be moved as is between the users. It will be moved inside the destination user’s\nfiles\ndirectory, and placed in a directory which follows the format:\ntransferred from <source-user> on <timestamp>\n. Using the example above, it will be stored under:\ndata/<destination-user>/files/transferred from <source-user> on 20170426_124510/\nSee the\nocc command reference\n,\nfor a complete list of\nocc\ncommands. If an exception occurred during the transfer ownership command or the command terminated prematurely, it is advised to run following command for the source\nand\ntarget user:\nsudo -u www-data ./occ files:troubleshoot-transfer-ownership --uid <uid>`\nCreating Persistent File Shares\nWhen a user is deleted, their files are also deleted. As you can imagine, this is a problem if they created file shares that need to be preserved, because these disappear as well. This means, whatever happens to the file owner also happens to the files. occ files_external:create\nocc files_external:import\nocc files_external:create\nThis command provides for the creation of both personal (for a specific user) and general shares. General Share\nsudo -u www-data ./occ files_external:import \\\n/import.json\nPersonal Share\nsudo -u www-data ./occ files_external:import \\\n/import.json --user someuser\nIn the two examples above, here is a sample JSON file, showing all of the available configuration options that the command supports. upload\nA new file can be uploaded/created (file target does not exist). upload_overwrite\nA file can overwrite an existing one. rename\nRename file to new name, all within the shared folder. move_in\nMove a file from outside the shared folder into the shared folder. move_in_overwrite\nMove a file from outside the shared folder and overwrite a file inside the shared folder. SabreDAV automatically deletes the target file first before moving, so requires DELETE permission too. move_in_subdir\nMove a file already in the shared folder into a subdirectory within the shared folder. move_in_subdir_overwrite\nMove a file already in the shared folder into a subdirectory within the shared folder and overwrite an existing file there. move_out\nMove a file to outside of the shared folder. move_out_subdir\nMove a file out of a subdirectory of the shared folder into the shared folder. copy_in\nCopy a file from outside the shared folder into the shared folder. copy_in_overwrite\nCopy a file from outside the shared folder and overwrite a file inside the shared folder. SabreDAV automatically deletes the target file first before copying, so requires DELETE permission too. delete\nDelete a file inside the shared folder. mkdir\nCreate a folder inside the shared folder. rmdir\nDelete folder inside the shared folder\nThe following lists what operations are allowed for the different permission combinations (share permission is omitted as it is not relevant to file operations):\nOperation(s)\nPermission Combinations\nREAD (aka read-only)\ndownload\nREAD +\nCREATE\ndownload\nupload\nmove_in\ncopy_in\nmkdir\nREAD +\nUPDATE\ndownload\nupload_overwrite\nrename\nREAD +\nDELETE\ndownload\nmove_out\ndelete\nrmdir\nREAD +\nCREATE +\nUPDATE\ndownload\nupload\nupload_overwrite\nrename\nmove_in\ncopy_in\nmkdir\nREAD +\nCREATE +\nDELETE\ndownload\nupload\nmove_in\nmove_in_overwrite\nmove_in_subdir\nmove_in_subdir_overwrite\nmove_out\nmove_out_subdir\ncopy_in\ncopy_in_overwrite\ndelete\nmkdir\nrmdir\nREAD +\nUPDATE +\nDELETE\ndownload\nupload_overwrite\nrename\nmove_out\ndelete\nrmdir\nREAD +\nCREATE +\nUPDATE +\nDELETE (all permissions)\ndownload\nupload\nupload_overwrite\nrename\nmove_in\nmove_in_overwrite\nmove_in_subdir\nmove_in_subdir_overwrite\nmove_out\nmove_out_subdir\ncopy_in\ncopy_in_overwrite\ndelete\nmkdir\nrmdir\nFederated Cloud Sharing Configuration\nFile Versioning\nAbout ownCloud\nThe Secure Collaboration Platform\nNews\nPrivacy statement\nImprint\nResources\nFAQ\nHelp\nSecurity\nChangelog\nGet started\nInteract\nRocket.Chat\nForum\nContribute\nCustomer support\n© Copyright 2011-2025, The ownCloud developers."
        }
    ]
}