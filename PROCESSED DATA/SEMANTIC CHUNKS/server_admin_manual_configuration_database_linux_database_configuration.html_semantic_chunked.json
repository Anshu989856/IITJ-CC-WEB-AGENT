{
    "file_name": "server_admin_manual_configuration_database_linux_database_configuration.html",
    "file_path": "./owncloud_docs\\server_admin_manual_configuration_database_linux_database_configuration.html",
    "chunks": [
        {
            "cluster": 1,
            "chunk_content": "Documentation for ownCloud (A Kiteworks Company)\nownCloud Server\nIntroduction\nAdmin Manual\nIntroduction\nUseful Pages\nFAQ\nGDPR\nInstallation\nDeployment Considerations\nDeployment Recommendations\nNFS\nSystem Requirements\nConfiguration Notes and Tips\nInstallation Options\nInstalling With Docker\nManual Installation on Linux\nDetailed Installation Guide\nDetailed Installation on Ubuntu (various versions)\nQuick Installation Guide\nOn Ubuntu 20.04\nOn Ubuntu 22.04\nLinux Package Manager\nLinux Package Manager Installation\nThe Installation Wizard\nTroubleshooting\nChanging Your ownCloud URL\nInstalling and Managing Apps\nSupported Apps\nMedia Viewer\nSELinux Configuration\nUsing Letâ€™s Encrypt SSL Certificates\nUsing Letsencrypt\nApache\nConfiguration\nDatabase\nDatabase Conversion\nDatabase Configuration\nEncryption\nEncryption Configuration\nEncryption Configuration Quick Guide\nExternal Storage\nExternal Storage Configuration\nExternal Storage Authentication Mechanisms\nAmazonS3\nDropbox\nFTP\nGoogle\nLocal\nownCloud\nS3 as Primary\nSFTP\nSMB\nWebDAV\nFiles and Sharing\nBig File Upload Configuration\nManual File Locking\nDefault Files Configuration\nFederated Cloud Sharing Configuration\nFile Sharing Configuration\nFile Versioning\nTransactional File Locking\nPreview Configuration\nMimetypes\nManaging the Trashbin\nIntegration\nMicrosoft Teams\nownCloud App for Splunk\nGeneral Topics\nCode Signing\nImpersonate Users\nFull Text Search\nServer\nActivity Configuration\nBackground Jobs Configuration\nCaching Configuration\nConfig Sample PHP Parameters\nConfig Apps Sample PHP Parameters\nCustom Client Repos\nEmail Configuration\nExcluded Blacklisted Files\nExternal Sites\nHarden Server\nImport SSL Cert\nIndex PHP Less URLs\nOCC Command\nLanguage Configuration\nLegal Settings Configuration\nLogging\nLogging Configuration\nRequest Tracing\nReverse Proxy Configuration\nSecurity\nBrute-Force Protection\nOAuth2\nPassword policy\nSecurity Setup Warnings\nThe HSM (Hardware Security Module) Daemon\nDependency Notes\nServer Tuning\nThird Party PHP Configuration\nVirus Scanner Support\nUI Configuration\nUser\nUser Management\nUser Roles\nReset Admin Password\nReset User Password\nUser Auth FTP SMB IMAP\nUser Auth LDAP\nUser Auth Two-Factor\nUser Auth OAuth2\nUser Provisioning API\nCustom Groups App\nGuests App\nOpenID Connect (OIDC)\nLogin Policies\nMaintenance\nUpgrading\nManual Upgrade\nDatabase Upgrade\nUpgrading from Package\nUsing the Updater App\nUpgrading PHP\nMarketplace Apps\nBackup and Restore\nBackup\nRestore\nMaintenance Mode\nExport and Import Instance Data\nManually Moving Data Folders\nEncryption\nMigrating from User Key to Master Key Encryption\nMigrating to a Different Server\nMigrating to Kiteworks PCN\nEnterprise\nAuthentication\nEnterprise Only Authentication\nKerberos Authentication\nClients\nCustom Client Repos\nCollaboration\nCollabora Online / Secure View\nMicrosoft Office Online / WOPI Integration\nDocument Classification\nClassify Documents and Enforce Policies\nExternal Storage\nLDAP Home Connector Configuration\nSharepoint integration Configuration\nWindows Network Drive Configuration\nWND Configuration Quick Guide\nFile Management\nFile Tagging\nFile Lifecycle Management\nFirewall\nFile Firewall\nInstallation\nInstalling & Upgrading ownCloud Enterprise Edition\nOracle DB Setup & Configuration\nLogging\nAuditing\nReporting\nMetrics\nGenerate a Config Report\nSecurity\nRansomware Protection\nUser Management\nShibboleth Integration\nSAML 2.0 Based SSO\nTroubleshooting\nGeneral Troubleshooting\nPath and Filename Length Limitations\nRetrieve Log Files and Configuration Settings\nRemove Non-Existent Background Jobs\nFound a Mistake? Developer Manual\nIntroduction\nGeneral Contributor Guidelines\nCommunity Code of Conduct\nCoding Style & General Guidelines\nDebugging\nPerformance Considerations\nSecurity Guidelines\nBackporting\nHelp and Communication\nDeveloping ownCloud Core\nIntroduction\nSetup Your Development Environment\nApplication Configuration\nTheming\nTranslation\nCode Standards Compliance\nTesting\nownCloud Test Pilots\nDrone Testing\nUnit Testing\nAcceptance Tests\nUser Interface Testing\nAvailable APIs\nThe External API\nThe Provisioning API\nOCS\nThe OCS Notifications API (v1)\nThe OCS REST API\nThe OCS Recipient API\nThe OCS Share API\nThe OCS TOTP Validation API\nThe OCS User Sync API\nNotify Public Link By Email\nThe Roles API\nWebDAV APIs\nThe Comments API\nThe Custom Groups Management API\nThe Files Versions API\nThe Meta API\nThe Search API\nThe Tags API\nThe Trash Bin API\nThe Public Files API\nApplication Development\nFundamental Concepts\nApplication Metadata\nThe Classloader\nConfiguration\nRouting\nControllers\nTemplates\nJavaScript\nCSS\nMiddleware\nDatabase Connectivity\nBackground Jobs\nLogging\nTesting\nThe DI Container\nFilesystem\nRESTful API\nHooks\nPublishing in the ownCloud Marketplace\nChangelog\nMarket App\nAdvanced Concepts\nCustom Filesystem Caches\nCustom Storage Backends\nNotifications\nStorage Backends\nExternal Storage Backends\nTranslation\nTwo-Factor Providers\nUser Management\nCode Signing\nTutorial\nMinimum Requirements\nThe Request Life Cycle\nThe Core Application Files\nRoutes and Controllers\nDatabase Connectivity\nCreate Template Content\nCreate a Navigation Menu\nAdd JavaScript and CSS\nWiring it Up\nApply the Finishing Touches\nAdd a RESTful API\nWriting Tests\nMobile Development\nAndroid\nLibrary Installation\nExamples\niOS\nLibrary Installation\nExamples\nBugtracker\nCode Reviews\nBug Triaging\nFound a Mistake? ownCloud Server UI\nIntroduction\nThe WebUI\nWeb Interface\nNavigating the WebUI\nPersonal Settings\nGeneral\nStorage\nSharing\nSecurity\nCustom Groups\nFiles\nAccess WebDAV\nSharing Files\nSearch & Full Text Search\nTagging Files\nComments\nVersion Control\nEncrypting Files\nManaging Deleted Files\nLarge File Uploads\nManual File Locking\nFile Lifecycle Management\nPublic Link Shares\nFederated Cloud Sharing\nManaging Connected Browsers and Devices\nOnline Collaboration\nStorage Quotas\nExternal Storage\nConnecting to SharePoint\nDesktop Mobile Sync\nApps\nActivity\nCalendar\nContacts\nMarket\nMedia Viewer App\nIntegration\nMicrosoft Teams\nSynchronization Clients\nSync iOS\nSync KDE\nSync OSX\nSync Thunderbird\nTroubleshooting\nFound a Mistake? ownCloud Server\n10.15\nDesktop App\nnext\n5.3\n5.2\nInfinite Scale Documentation\nnext\n7.1\n7.0\nMobile App for Android\nnext\n4.5\n4.4\nMobile App for iOS\nnext\n12.4\n12.3\nownCloud Main Page\nownCloud Server\nnext\n10.15\n10.14\nownCloud Web User Interfaces\nnext\nownCloud Server\nAdmin Manual\nConfiguration\nDatabase\nDatabase Configuration\nnext\n10.15\n10.14\nEdit this Page\nDatabase Configuration on Linux\nTable of Contents\nIntroduction\nRequirements\nMySQL / MariaDB\nParameters\nMySQL / MariaDB\nPostgreSQL\nTroubleshooting\nHow to Workaround General Error: 2006 MySQL Server Has Gone Away\nHow Can I Find Out If My MySQL/PostgreSQL Server Is Reachable? Useful SQL Commands\nHow to Solve Deadlock Errors\nIntroduction\nownCloud requires a database in which administrative data is stored. The following databases are currently supported:\nMySQL / MariaDB\nPostgreSQL\nOracle (\nownCloud Enterprise edition only\n)\nThe MySQL or MariaDB databases are the recommended database engines. After physically installing ownCloud, the setup of the owncloud database is either\ndone with the\ninstallation wizard\nor via the\ncommand line. Your system is affected if you see the following\nin your log file during the installation or update of ownCloud:\nAn unhandled exception has been thrown: exception `PDOException' with message `SQLSTATE[HY000]: General error: 1665 Cannot execute statement: impossible to write to binary log since BINLOG_FORMAT = STATEMENT and at least one table uses a storage engine limited to row-based logging. Set\nREAD COMMITTED\nas the Transaction Isolation Level\nAs discussed above, ownCloud is using the\nTRANSACTION_READ_COMMITTED\ntransaction isolation\nlevel. Configuring the Storage Engine\nSince ownCloud 7, only InnoDB is supported as a storage engine. Running ownCloud in such an environment is not supported. Parameters\nFor setting up ownCloud to use any database, use the instructions in\nthe Installation Wizard\n. However, in exceptional cases (for example, if you want to connect your ownCloud instance\nto a database created by a previous installation of ownCloud), some modification might\nbe required. That the\nmysql.default_socket\npoints to the correct socket (if the database runs on\nthe same server as ownCloud). The PHP configuration in\n/etc/php/7.4/apache2/conf.d/20-mysql.ini\ncould look like this:\n# configuration for PHP MySQL module\nextension=pdo_mysql.so\n[mysql]\nmysql.allow_local_infile=On\nmysql.allow_persistent=On\nmysql.cache_size=2000\nmysql.max_persistent=-1\nmysql.max_links=-1\nmysql.default_port=\nmysql.default_socket=/var/lib/mysql/mysql.sock  # Debian squeeze: /var/run/mysqld/mysqld.sock\nmysql.default_host=\nmysql.default_user=\nmysql.default_password=\nmysql.connect_timeout=60\nmysql.trace_mode=Off\nAn ownCloud instance configured with MySQL would contain the hostname on which the database\nis running, a valid username and password to access it, and the name of the database. The\nconfig/config.php\nas created by the\ninstallation wizard\nwould therefore contain entries like this:\n<?php\n\"dbtype\"        => \"mysql\",\n\"dbname\"        => \"owncloud\",\n\"dbuser\"        => \"username\",\n\"dbpassword\"    => \"password\",\n\"dbhost\"        => \"localhost\",\n\"dbtableprefix\" => \"oc_\",\nConfigure MySQL for 4-byte Unicode Support\nFor supporting such features as emoji, both MySQL (or MariaDB)\nand\nownCloud need to be\ncapable of using 4-byte Unicode instead of the default 3-byte and configured accordingly. If you are setting up\na new ownCloud installation, using version 10.0 or above,\nand\nyouâ€™re using a\nminimum\nMySQL version of 5.7\nthen you donâ€™t need to do anything\n, as support is checked during setup and used if available. However, if\nyou have an\nexisting\nownCloud installation that you need to convert to use 4-byte Unicode support\nor\nyou are working with a MySQL version\nearlier\nthan version 5.7\nthen you need to do two things:\nIn your MySQL configuration, add the configuration settings below. When\nfinished, you can quit the prompt by entering:\n\\q\nAn ownCloud instance configured with PostgreSQL will contain the hostname on which the\ndatabase is running, a valid username and password to access it, and the name of the\ndatabase. The\nconfig/config.php\nas created by\nthe Installation Wizard\nwould contain entries like this:\n<?php\n\"dbtype\"        => \"pgsql\",\n\"dbname\"        => \"owncloud\",\n\"dbuser\"        => \"username\",\n\"dbpassword\"    => \"password\",\n\"dbhost\"        => \"localhost\",\n\"dbtableprefix\" => \"oc_\",\nTroubleshooting\nHow to Workaround General Error: 2006 MySQL Server Has Gone Away\nThe database request takes too long, and therefore the MySQL server times out. For such systems,\nownCloud is providing a\ndbdriveroptions\nconfiguration option within your\nconfig/config.php\nwhere you can pass such options to the database driver. Database Conversion\nEncryption\nAbout ownCloud\nThe Secure Collaboration Platform\nNews\nPrivacy statement\nImprint\nResources\nFAQ\nHelp\nSecurity\nChangelog\nGet started\nInteract\nRocket.Chat\nForum\nContribute\nCustomer support\nÂ© Copyright 2011-2025, The ownCloud developers."
        },
        {
            "cluster": 2,
            "chunk_content": "How Can I Find Out If a Created User Can Access a Database? The PHP\nconfiguration in\n/etc/php/7.4/apache2/conf.d/20-pgsql.ini\ncould look like this:\n# configuration for PHP PostgreSQL module\nextension=pdo_pgsql.so\nextension=pgsql.so\n[PostgresSQL]\npgsql.allow_persistent = On\npgsql.auto_reset_persistent = Off\npgsql.max_persistent = -1\npgsql.max_links = -1\npgsql.ignore_notice = 0\npgsql.log_notice = 0\nThe default configuration for PostgreSQL (at least in Ubuntu 14.04) is to use the peer\nauthentication method. Check\n/etc/postgresql/9.3/main/pg_hba.conf\nto find out which\nauthentication method is used in your setup. To start the PostgreSQL command-line mode use:\nsudo -u postgres psql -d template1\nThen a\ntemplate1=\\#\nprompt will appear. How Can I Find Out If My MySQL/PostgreSQL Server Is Reachable? How Can I Find Out If a Created User Can Access a Database? The easiest way to test if a database can be accessed is by starting the command-line interface:\nMySQL\nAssuming the database server is installed on the same system youâ€™re running the command\nfrom, use:\nmysql -uUSERNAME -p\nTo access a MySQL installation on a different machine, add the -h option with the\nrespective hostname:\nmysql -uUSERNAME -p -h HOSTNAME\nmysql> SHOW VARIABLES LIKE \"version\";\n+---------------+--------+\n| Variable_name | Value  |\n+---------------+--------+\n| version       | 5.1.67 |\n+---------------+--------+\n1 row in set (0.00 sec)\nmysql> quit\nPostgreSQL\nAssuming the database server is installed on the same system youâ€™re running the command\nfrom, use:\npsql -Uusername -downcloud\nTo access a PostgreSQL installation on a different machine, add the\n-h\noption with the applicable hostname:\npsql -Uusername -downcloud -h HOSTNAME\npostgres=# SELECT version();\nPostgreSQL 8.4.12 on i686-pc-linux-gnu, compiled by GCC gcc (GCC) 4.1.3 20080704 (prerelease), 32-bit\n(1 row)\npostgres=# \\q\nUseful SQL Commands\nShow Database Users\nMySQL\nPostgreSQL\nSELECT User,Host FROM mysql.user;\nSELECT * FROM pg_user;\nShow Available Databases\nMySQL\nPostgreSQL\nSHOW DATABASES;\n\\l\nShow ownCloud Tables in Database\nMySQL\nPostgreSQL\nUSE owncloud; SHOW TABLES;\n\\c owncloud; \\d\nQuit Database\nMySQL\nPostgreSQL\nquit;\n\\q\nHow to Solve Deadlock Errors\nSQLSTATE[40001]: Serialization failure: 1213 Deadlock found when trying to get lock; try restarting transaction\nExplanation\nThis error occurs when two transactions write and commit to the same rows in separate\ncluster nodes."
        },
        {
            "cluster": 4,
            "chunk_content": "For more information see the\nComplete the Installation\nsection in the Manual Installation documentation. Oracle users, see\nthe Oracle Database Configuration guide\n. The steps for configuring a third party database are beyond the scope of this document. Please refer to the documentation below, for your database vendor. Some database configurations are enforcing other transaction isolation levels. To avoid data loss under high load scenarios (e.g., by using the sync client with many\nclients/users and many parallel operations), you need to configure the transaction isolation\nlevel accordingly. You should not have to edit the respective values in the\nconfig/config.php\n. You can now enter your commands as required. Itâ€™s also\npossible that the server is dropping a packet that is too large. Please refer to the manual\nof your database for how to raise the configuration options\nwait_timeout\nand/or\nmax_allowed_packet\n. Some shared hosts are not allowing access to these config options. Please refer to\nthe sample PHP configuration parameters\nfor an example. To check the serverâ€™s network availability, use the ping command on the serverâ€™s hostname\n(\ndb.server.com\nin this example):\nping db.server.com\nPING db.server.com (ip-address) 56(84) bytes of data. 64 bytes from your-server.local.lan (192.168.1.10): icmp_req=1 ttl=64 time=3.64 ms\n64 bytes from your-server.local.lan (192.168.1.10): icmp_req=2 ttl=64 time=0.055 ms\n64 bytes from your-server.local.lan (192.168.1.10): icmp_req=3 ttl=64 time=0.062 ms\nFor a more detailed check whether the access to the database server software itself works\ncorrectly, see the next question. Here is\na useful guide\n,\nwhen using\nHAProxy\n. The same concept applies when\nMaxScale\nis used as a DB proxy. It needs to be\nconfigured to send all write requests to a single DB node instead all of them and balance\nread statements across the rest of the nodes. Here is\na useful guide\non how to configure MaxScale with Read/Write splitting. This is disabled by default."
        },
        {
            "cluster": 0,
            "chunk_content": "Requirements\nChoosing to use MySQL / MariaDB, PostgreSQL, or Oracle as your database requires,\nthat you install and set up the server software first. The\nMariaDB Knowledge Base\nThe\nMySQL documentation\nThe\nOracle Database documentation\nThe\nPostgreSQL documentation\nMySQL / MariaDB\nEnabling Binary Logging\nownCloud is currently using a\nTRANSACTION_READ_COMMITTED\ntransaction isolation to avoid\ndata loss under high load scenarios (e.g., by using the sync client with many\nclients/users and many parallel operations). This requires a disabled or correctly configured\nbinary logging when using MySQL or MariaDB. InnoDB is limited to row-logging when transaction isolation level is READ COMMITTED or READ UNCOMMITTED.' There are two solutions:\nOne is to disable binary logging. Binary logging records all changes to your database, and how long each change took. The purpose of binary logging is to enable replication and to support backup operations. The other is to change the BINLOG_FORMAT = STATEMENT in your database configuration file,\nor possibly in your database startup script, to BINLOG_FORMAT = MIXED or BINLOG_FORMAT = ROW. See\nOverview of the Binary Log\nand\nThe Binary Log\nfor detailed information. Please refer to the\nMySQL manual\nfor detailed information. Some shared hosts do not support InnoDB and only MyISAM. MySQL / MariaDB\nIf you decide to use a MySQL or MariaDB database, ensure the following:\nThat you have installed and enabled the\npdo_mysql\nextension in PHP. MariaDB is backward compatible with MySQL. All instructions work for both, so you will not need to replace or revise any existing\nMySQL client commands. If you already have them configured, update them to reflect the values specified:\n[mysqld]\ninnodb_large_prefix=ON\ninnodb_file_format=Barracuda\ninnodb_file_per_table=ON\nRun the following occ command:\nsudo -u www-data ./occ db:convert-mysql-charset\nWhen this is done, tables will be created with:\nA\nutf8mb4\ncharacter set. row_format\nset to compressed. For more information, please either refer to\nconfig.sample.php\n,\nor have a read through the following links:\nhttps://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_large_prefix\nhttps://mariadb.com/kb/en/library/innodb-system-variables/#innodb_large_prefix\nhttp://www.tocker.ca/benchmarking-innodb-page-compression-performance.html\nhttp://dev.mysql.com/doc/refman/5.7/en/charset-unicode-utf8mb4.html\nhttps://dev.mysql.com/doc/refman/5.7/en/innodb-file-format.html\nhttps://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_large_prefix\nPostgreSQL\nIf you decide to use a PostgreSQL database, make sure that you have installed and enabled the\nPostgreSQL extension\nand the\nPostgreSQL PDO extension\nin PHP. Only one of them can successfully commit."
        },
        {
            "cluster": 3,
            "chunk_content": "The failing one will be aborted. For cluster level aborts, Galera Cluster returns a deadlock error. Solution\nThe solution, for Galera Cluster, would be to send all write requests to a single DB node,\ninstead of all of them. Enabling Causality Checks\nAdditionally, to solve this issue, when using Galera Cluster, customers should try to set\nwsrep_sync_wait=1\n. When enabled, the node triggers causality checks in response to certain\ntypes of queries."
        }
    ]
}