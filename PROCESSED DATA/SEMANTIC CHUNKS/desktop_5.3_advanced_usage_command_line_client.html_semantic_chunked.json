{
    "file_name": "desktop_5.3_advanced_usage_command_line_client.html",
    "file_path": "./owncloud_docs\\desktop_5.3_advanced_usage_command_line_client.html",
    "chunks": [
        {
            "cluster": 1,
            "chunk_content": "Documentation for ownCloud (A Kiteworks Company)\nDesktop App\nIntroduction\nInstalling the Desktop App\nUsing the Desktop App\nUsing the Virtual Filesystem\nFilename Considerations\nManage Synchronisation Conflicts\nOpen Files with Office Web Apps\nAutomatic Updating\nRemoving the Desktop App\nFAQ\nAdvanced Usage\nCommand Line Parameters\nConfiguration File\nEnvironment Variables\nLow Disk Space\nThe Command Line Client\nAppendices\nHistory and Architecture\nTroubleshooting\nDesktop App\n5.3\nDesktop App\nnext\n5.3\n5.2\nInfinite Scale Documentation\nnext\n7.1\n7.0\nMobile App for Android\nnext\n4.5\n4.4\nMobile App for iOS\nnext\n12.4\n12.3\nownCloud Main Page\nownCloud Server\nnext\n10.15\n10.14\nownCloud Web User Interfaces\nnext\nDesktop App\nAdvanced Usage\nThe Command Line Client\nnext\n5.3\n5.2\nEdit this Page\nThe Command Line Client\nTable of Contents\nIntroduction\nCommand Description\nCredential Handling\nExclude List\nCommand Line Client When Using AppImages\nIntroduction\nThe ownCloud Client packages contain a command line client, owncloudcmd, that can be used to synchronize ownCloud files to client machines from the command line. Command Description\nowncloudcmd\nperforms a single\nsync run\nand then exits the synchronization process. In this manner,\nowncloudcmd\nprocesses the differences between client and server directories and propagates the files to bring both repositories to the same state. Contrary to the GUI-based client,\nowncloudcmd\ndoes not repeat synchronizations on its own. To invoke\nowncloudcmd\n, you must provide the local and the remote repository URL using the following command. Note that for Windows, you must be in the directory where ownCloud is installed while on Linux, you can use the command from anywhere. To show its location in Linux, type\nwhereis owncloudcmd\n. owncloudcmd [options] [arguments]\nRegarding the arguments, all of them must be used in the following order and the placeholders replaced with real data:\nsource_dir server_url remote_folder\nArguments\nDescription\nsource_dir\nThis is the local directory. The following options are supported by\nowncloudcmd\n:\nOption\nDescription\n-s, --silent\nDon’t be so verbose. Credential Handling\nowncloudcmd\nrequires the user to specify the username and password using the standard URL pattern. The example is based on Linux and uses ownCloud Server as backend:\nowncloudcmd /home/user/my_sync_folder \\\nhttps://carla:secret@server/owncloud/remote.php/dav/files/carla/ \\\n/\nTo synchronize the ownCloud directory\nMusic\nto the local directory\nmedia/music\n, through a proxy listening on port\n8080\n, and on a gateway machine using IP address\n192.168.178.1\n, the command line would be:\nowncloudcmd --httpproxy http://192.168.178.1:8080 \\\n$HOME/media/music \\\nhttps://server/owncloud/remote.php/dav/files/carla/ \\\n/Music. owncloudcmd\nwill prompt for the username and password, unless they have been specified on the command line or\n-n\nhas been passed. Exclude List\nowncloudcmd\nrequires access to an exclude list file. It must either be installed along with\nowncloudcmd\nand thus be available in a system location, be placed next to the binary as\nsync-exclude.lst\nor be explicitly specified with the\n--exclude\nswitch. Example:\n./ownCloud-[...]-x86_64.AppImage --cmd --help\nLow Disk Space\nHistory and Architecture\nAbout ownCloud\nThe Secure Collaboration Platform\nNews\nPrivacy statement\nImprint\nResources\nFAQ\nHelp\nSecurity\nChangelog\nGet started\nInteract\nRocket.Chat\nForum\nContribute\nCustomer support\n© Copyright 2011-2025, The ownCloud developers."
        },
        {
            "cluster": 3,
            "chunk_content": "It also does not monitor for file system changes. Infinite Scale only (server location and spaces URL can differ)\n-u, --user <name>\nUse [name] as the login name\n-p, --password <password>\nUse [pass] as password\n--non-interactive\nDo not block execution with interaction\n--max-sync-retries <n>\nRetries maximum n times (default to 3)\n--uplimit <n>\nLimit the upload speed of files to n KB/s\n--downlimit <n>\nLimit the download speed of files to n KB/s\n--sync-hidden-files\nEnables synchronization of hidden files\n--logdebug\nMore verbose logging\n-h, --help\nDisplays help on commandline options."
        },
        {
            "cluster": 2,
            "chunk_content": "server_url\nThis is the server URL. remote_folder\nThe remote folder on the server. --httpproxy <http://server:port>\nSpecify a HTTP proxy to use. --trust\nTrust the SSL certification\n--exclude <file>\nPath to an exclude list [file]\n--unsyncedfolders <file>\nFile containing the list of unsynced remote folders (selective sync)\n--server <url>\nUse [url] as the location of the server."
        },
        {
            "cluster": 4,
            "chunk_content": "--help-all\nDisplays help including Qt specific options. -v, --version\nDisplays version information."
        },
        {
            "cluster": 0,
            "chunk_content": "Command Line Client When Using AppImages\nWhen using an\nAppImage\ninstallation with Linux, there is no\nowncloudcmd\ncommand you can start but the name of the AppImage. To use the command line client of the AppImage, just use the name of the AppImage and append the\n--cmd\noption plus all other parameters as listed in the\nCommand Description\n. Replace\n[…​]\nwith the version you are using or take the name of the AppImage if you have named it otherwise."
        }
    ]
}